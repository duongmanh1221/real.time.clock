

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jan 19 13:07:45 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	psect	text21,local,class=CODE,merge=1,delta=2
    30                           	psect	text22,local,class=CODE,merge=1,delta=2
    31                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191                           
   192                           	psect	strings
   193  0003                     __pstrings:
   194  0003                     stringtab:
   195  0003                     __stringtab:
   196  0003                     stringcode:	
   197                           ;	String table - string pointers are 1 byte each
   198                           
   199  0003                     stringdir:
   200  0003  3000               	movlw	high stringdir
   201  0004  008A               	movwf	10
   202  0005  0804               	movf	4,w
   203  0006  0A84               	incf	4,f
   204  0007  0782               	addwf	2,f
   205  0008                     __stringbase:
   206  0008  3400               	retlw	0
   207  0009                     __end_of__stringtab:
   208  0009                     _dpowers:
   209  0009  3401               	retlw	1
   210  000A  3400               	retlw	0
   211  000B  340A               	retlw	10
   212  000C  3400               	retlw	0
   213  000D  3464               	retlw	100
   214  000E  3400               	retlw	0
   215  000F  34E8               	retlw	232
   216  0010  3403               	retlw	3
   217  0011  3410               	retlw	16
   218  0012  3427               	retlw	39
   219  0013                     __end_of_dpowers:
   220  0013                     _SSPBUF	set	19
   221  0014                     _SSPCON	set	20
   222  0037                     _RB7	set	55
   223  0041                     _RD1	set	65
   224  0043                     _RD3	set	67
   225  0042                     _RD2	set	66
   226  0047                     _RD7	set	71
   227  0046                     _RD6	set	70
   228  0045                     _RD5	set	69
   229  0044                     _RD4	set	68
   230  0088                     _TRISD	set	136
   231  0086                     _TRISB	set	134
   232  0091                     _SSPCON2bits	set	145
   233  0093                     _SSPADD	set	147
   234  0094                     _SSPSTAT	set	148
   235  0091                     _SSPCON2	set	145
   236  048B                     _RCEN	set	1163
   237  0489                     _RSEN	set	1161
   238  048A                     _PEN	set	1162
   239  0488                     _SEN	set	1160
   240  043C                     _TRISC4	set	1084
   241  043B                     _TRISC3	set	1083
   242  0013                     STR_1:
   243  0013  3425               	retlw	37	;'%'
   244  0014  3432               	retlw	50	;'2'
   245  0015  3464               	retlw	100	;'d'
   246  0016  342F               	retlw	47	;'/'
   247  0017  3425               	retlw	37	;'%'
   248  0018  3432               	retlw	50	;'2'
   249  0019  3464               	retlw	100	;'d'
   250  001A  342F               	retlw	47	;'/'
   251  001B  3425               	retlw	37	;'%'
   252  001C  3432               	retlw	50	;'2'
   253  001D  3464               	retlw	100	;'d'
   254  001E  3420               	retlw	32	;' '
   255  001F  3400               	retlw	0
   256  0013                     
   257                           	psect	cinit
   258  07FC                     start_initialization:	
   259                           ; #config settings
   260                           
   261  07FC                     __initialization:
   262  07FC                     end_of_initialization:	
   263                           ;End of C runtime variable initialization code
   264                           
   265  07FC                     __end_of__initialization:
   266  07FC  0183               	clrf	3
   267  07FD  120A  118A  2DB3   	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:
   271  0070                     ?_isdigit:
   272  0070                     ??_isdigit:	
   273                           ; 1 bit 
   274                           
   275  0070                     ?_BCD2Decimal:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_I2C_Master_Wait:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ??_I2C_Master_Wait:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_I2C_Master_Start:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ??_I2C_Master_Start:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_I2C_Master_Stop:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ??_I2C_Master_Stop:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_I2C_Master_RepeatedStart:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ??_I2C_Master_RepeatedStart:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_I2C_Master_Write:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ??_I2C_Master_Write:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_I2C_Master_Read:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ??_I2C_Master_Read:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_Lcd_Port:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ??_Lcd_Port:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_Lcd_Cmd:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_Lcd_Init:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_Lcd_Clear:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_Lcd_Write_Char:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_Lcd_Write_String:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_rtc_get_datetime:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?___bmul:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?___wmul:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?___lwdiv:	
   348                           ; 2 bytes @ 0x0
   349                           
   350  0070                     ?___lldiv:	
   351                           ; 2 bytes @ 0x0
   352                           
   353  0070                     I2C_Master_Write@data:	
   354                           ; 4 bytes @ 0x0
   355                           
   356  0070                     Lcd_Port@a:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ___bmul@multiplicand:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     _isdigit$653:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ___wmul@multiplier:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ___lwdiv@divisor:	
   369                           ; 2 bytes @ 0x0
   370                           
   371  0070                     ___lldiv@divisor:	
   372                           ; 2 bytes @ 0x0
   373                           
   374                           
   375                           ; 4 bytes @ 0x0
   376  0070                     	ds	1
   377  0071                     ??_Lcd_Cmd:
   378  0071                     ??_Lcd_Write_Char:	
   379                           ; 1 bytes @ 0x1
   380                           
   381  0071                     ??___bmul:	
   382                           ; 1 bytes @ 0x1
   383                           
   384  0071                     I2C_Master_Read@ack:	
   385                           ; 1 bytes @ 0x1
   386                           
   387  0071                     isdigit@c:	
   388                           ; 1 bytes @ 0x1
   389                           
   390                           
   391                           ; 1 bytes @ 0x1
   392  0071                     	ds	1
   393  0072                     I2C_Master_Read@temp:
   394  0072                     Lcd_Write_Char@temp:	
   395                           ; 1 bytes @ 0x2
   396                           
   397  0072                     ___bmul@product:	
   398                           ; 1 bytes @ 0x2
   399                           
   400  0072                     ___wmul@multiplicand:	
   401                           ; 1 bytes @ 0x2
   402                           
   403  0072                     ___lwdiv@dividend:	
   404                           ; 2 bytes @ 0x2
   405                           
   406                           
   407                           ; 2 bytes @ 0x2
   408  0072                     	ds	1
   409  0073                     Lcd_Cmd@a:
   410  0073                     Lcd_Write_Char@y:	
   411                           ; 1 bytes @ 0x3
   412                           
   413  0073                     ___bmul@multiplier:	
   414                           ; 1 bytes @ 0x3
   415                           
   416                           
   417                           ; 1 bytes @ 0x3
   418  0073                     	ds	1
   419  0074                     ??_BCD2Decimal:
   420  0074                     ??_Lcd_Init:	
   421                           ; 1 bytes @ 0x4
   422                           
   423  0074                     ??_Lcd_Clear:	
   424                           ; 1 bytes @ 0x4
   425                           
   426  0074                     ?_Lcd_Set_Cursor:	
   427                           ; 1 bytes @ 0x4
   428                           
   429  0074                     ??___wmul:	
   430                           ; 1 bytes @ 0x4
   431                           
   432  0074                     ??___lwdiv:	
   433                           ; 1 bytes @ 0x4
   434                           
   435  0074                     Lcd_Set_Cursor@b:	
   436                           ; 1 bytes @ 0x4
   437                           
   438  0074                     Lcd_Write_Char@a:	
   439                           ; 1 bytes @ 0x4
   440                           
   441  0074                     ___wmul@product:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     ___lldiv@dividend:	
   445                           ; 2 bytes @ 0x4
   446                           
   447                           
   448                           ; 4 bytes @ 0x4
   449  0074                     	ds	1
   450  0075                     ??_Lcd_Set_Cursor:
   451  0075                     ??_Lcd_Write_String:	
   452                           ; 1 bytes @ 0x5
   453                           
   454  0075                     ___lwdiv@quotient:	
   455                           ; 1 bytes @ 0x5
   456                           
   457                           
   458                           ; 2 bytes @ 0x5
   459  0075                     	ds	1
   460  0076                     Lcd_Write_String@i:
   461                           
   462                           ; 2 bytes @ 0x6
   463  0076                     	ds	1
   464  0077                     BCD2Decimal@num:
   465  0077                     Lcd_Set_Cursor@a:	
   466                           ; 1 bytes @ 0x7
   467                           
   468  0077                     ___lwdiv@counter:	
   469                           ; 1 bytes @ 0x7
   470                           
   471                           
   472                           ; 1 bytes @ 0x7
   473  0077                     	ds	1
   474  0078                     ??_rtc_get_datetime:
   475  0078                     ??___lldiv:	
   476                           ; 1 bytes @ 0x8
   477                           
   478  0078                     ?___lwmod:	
   479                           ; 1 bytes @ 0x8
   480                           
   481  0078                     Lcd_Set_Cursor@z:	
   482                           ; 2 bytes @ 0x8
   483                           
   484  0078                     Lcd_Write_String@a:	
   485                           ; 1 bytes @ 0x8
   486                           
   487  0078                     ___lwmod@divisor:	
   488                           ; 1 bytes @ 0x8
   489                           
   490                           
   491                           ; 2 bytes @ 0x8
   492  0078                     	ds	1
   493  0079                     Lcd_Set_Cursor@y:
   494  0079                     ___lldiv@quotient:	
   495                           ; 1 bytes @ 0x9
   496                           
   497                           
   498                           ; 4 bytes @ 0x9
   499  0079                     	ds	1
   500  007A                     Lcd_Set_Cursor@temp:
   501  007A                     ___lwmod@dividend:	
   502                           ; 1 bytes @ 0xA
   503                           
   504                           
   505                           ; 2 bytes @ 0xA
   506  007A                     	ds	2
   507  007C                     ??___lwmod:
   508                           
   509                           ; 1 bytes @ 0xC
   510  007C                     	ds	1
   511  007D                     ___lldiv@counter:
   512  007D                     ___lwmod@counter:	
   513                           ; 1 bytes @ 0xD
   514                           
   515                           
   516                           ; 1 bytes @ 0xD
   517  007D                     	ds	1
   518                           
   519                           	psect	cstackBANK0
   520  0020                     __pcstackBANK0:
   521  0020                     ?_I2C_Master_Init:
   522  0020                     ?_sprintf:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0020                     sprintf@f:	
   526                           ; 2 bytes @ 0x0
   527                           
   528  0020                     I2C_Master_Init@clock:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0020                     rtc_get_datetime@buff:	
   532                           ; 4 bytes @ 0x0
   533                           
   534                           
   535                           ; 8 bytes @ 0x0
   536  0020                     	ds	4
   537  0024                     ??_I2C_Master_Init:
   538                           
   539                           ; 1 bytes @ 0x4
   540  0024                     	ds	3
   541  0027                     ??_sprintf:
   542                           
   543                           ; 1 bytes @ 0x7
   544  0027                     	ds	1
   545  0028                     rtc_get_datetime@i:
   546                           
   547                           ; 2 bytes @ 0x8
   548  0028                     	ds	2
   549  002A                     rtc_get_datetime@add:
   550  002A                     sprintf@ap:	
   551                           ; 1 bytes @ 0xA
   552                           
   553                           
   554                           ; 1 bytes @ 0xA
   555  002A                     	ds	1
   556  002B                     sprintf@prec:
   557                           
   558                           ; 1 bytes @ 0xB
   559  002B                     	ds	1
   560  002C                     sprintf@flag:
   561                           
   562                           ; 1 bytes @ 0xC
   563  002C                     	ds	1
   564  002D                     sprintf@val:
   565                           
   566                           ; 2 bytes @ 0xD
   567  002D                     	ds	2
   568  002F                     sprintf@width:
   569                           
   570                           ; 2 bytes @ 0xF
   571  002F                     	ds	2
   572  0031                     sprintf@sp:
   573                           
   574                           ; 1 bytes @ 0x11
   575  0031                     	ds	1
   576  0032                     sprintf@c:
   577                           
   578                           ; 1 bytes @ 0x12
   579  0032                     	ds	1
   580  0033                     ??_main:
   581                           
   582                           ; 1 bytes @ 0x13
   583  0033                     	ds	7
   584  003A                     main@a:
   585                           
   586                           ; 10 bytes @ 0x1A
   587  003A                     	ds	10
   588  0044                     main@b:
   589                           
   590                           ; 10 bytes @ 0x24
   591  0044                     	ds	10
   592  004E                     main@dt:
   593                           
   594                           ; 6 bytes @ 0x2E
   595  004E                     	ds	6
   596                           
   597                           	psect	maintext
   598  05B3                     __pmaintext:	
   599 ;;
   600 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   601 ;;
   602 ;; *************** function _main *****************
   603 ;; Defined at:
   604 ;;		line 185 in file "click.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  b              10   36[BANK0 ] unsigned char [10]
   609 ;;  a              10   26[BANK0 ] unsigned char [10]
   610 ;;  dt              6   46[BANK0 ] struct .
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : B00/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         0      26       0       0       0
   622 ;;      Temps:          0       7       0       0       0
   623 ;;      Totals:         0      33       0       0       0
   624 ;;Total ram usage:       33 bytes
   625 ;; Hardware stack levels required when called: 3
   626 ;; This function calls:
   627 ;;		_I2C_Master_Init
   628 ;;		_Lcd_Clear
   629 ;;		_Lcd_Init
   630 ;;		_Lcd_Set_Cursor
   631 ;;		_Lcd_Write_String
   632 ;;		_rtc_get_datetime
   633 ;;		_sprintf
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639  05B3                     _main:	
   640                           ;psect for function _main
   641                           
   642  05B3                     l1622:	
   643                           ;incstack = 0
   644                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   645                           
   646                           
   647                           ;click.c: 187:       if(RB7==0) RD1=1;
   648  05B3  30FF               	movlw	255
   649  05B4  1683               	bsf	3,5	;RP0=1, select bank1
   650  05B5  1303               	bcf	3,6	;RP1=0, select bank1
   651  05B6  0086               	movwf	6	;volatile
   652  05B7                     l1624:
   653                           
   654                           ;click.c: 188:      }
   655  05B7  0188               	clrf	8	;volatile
   656  05B8                     l1626:
   657                           
   658                           ;click.c: 189:       _delay((unsigned long)((5)*(20000000/4000.0)));
   659  05B8  1283               	bcf	3,5	;RP0=0, select bank0
   660  05B9  1303               	bcf	3,6	;RP1=0, select bank0
   661  05BA  1088               	bcf	8,1	;volatile
   662  05BB                     l1628:
   663                           
   664                           ;click.c: 190:     };click.c: 191: }
   665  05BB  3000               	movlw	0
   666  05BC  00A3               	movwf	I2C_Master_Init@clock+3
   667  05BD  3001               	movlw	1
   668  05BE  00A2               	movwf	I2C_Master_Init@clock+2
   669  05BF  3086               	movlw	134
   670  05C0  00A1               	movwf	I2C_Master_Init@clock+1
   671  05C1  30A0               	movlw	160
   672  05C2  00A0               	movwf	I2C_Master_Init@clock
   673  05C3  120A  118A  22F4  120A  118A  	fcall	_I2C_Master_Init
   674  05C8                     l1630:
   675  05C8  120A  118A  2435  120A  118A  	fcall	_Lcd_Init
   676  05CD                     l1632:
   677  05CD  120A  118A  21F1  120A  118A  	fcall	_Lcd_Clear
   678  05D2                     l1634:
   679  05D2  304E               	movlw	(low (main@dt| 0))& (0+255)
   680  05D3  120A  118A  24F9  120A  118A  	fcall	_rtc_get_datetime
   681  05D8                     l1636:
   682  05D8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   683  05D9  1283               	bcf	3,5	;RP0=0, select bank0
   684  05DA  1303               	bcf	3,6	;RP1=0, select bank0
   685  05DB  00B3               	movwf	??_main
   686  05DC  0833               	movf	??_main,w
   687  05DD  00A0               	movwf	sprintf@f
   688  05DE  084E               	movf	main@dt,w
   689  05DF  00B4               	movwf	??_main+1
   690  05E0  01B5               	clrf	??_main+2
   691  05E1  0834               	movf	??_main+1,w
   692  05E2  00A1               	movwf	?_sprintf+1
   693  05E3  0835               	movf	??_main+2,w
   694  05E4  00A2               	movwf	?_sprintf+2
   695  05E5  084F               	movf	main@dt+1,w
   696  05E6  00B6               	movwf	??_main+3
   697  05E7  01B7               	clrf	??_main+4
   698  05E8  0836               	movf	??_main+3,w
   699  05E9  00A3               	movwf	?_sprintf+3
   700  05EA  0837               	movf	??_main+4,w
   701  05EB  00A4               	movwf	?_sprintf+4
   702  05EC  0850               	movf	main@dt+2,w
   703  05ED  00B8               	movwf	??_main+5
   704  05EE  01B9               	clrf	??_main+6
   705  05EF  0838               	movf	??_main+5,w
   706  05F0  00A5               	movwf	?_sprintf+5
   707  05F1  0839               	movf	??_main+6,w
   708  05F2  00A6               	movwf	?_sprintf+6
   709  05F3  303A               	movlw	(low (main@a| 0))& (0+255)
   710  05F4  120A  118A  2676  120A  118A  	fcall	_sprintf
   711  05F9                     l1638:
   712  05F9  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   713  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   714  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   715  05FC  00B3               	movwf	??_main
   716  05FD  0833               	movf	??_main,w
   717  05FE  00A0               	movwf	sprintf@f
   718  05FF  0851               	movf	main@dt+3,w
   719  0600  00B4               	movwf	??_main+1
   720  0601  01B5               	clrf	??_main+2
   721  0602  0834               	movf	??_main+1,w
   722  0603  00A1               	movwf	?_sprintf+1
   723  0604  0835               	movf	??_main+2,w
   724  0605  00A2               	movwf	?_sprintf+2
   725  0606  0852               	movf	main@dt+4,w
   726  0607  00B6               	movwf	??_main+3
   727  0608  01B7               	clrf	??_main+4
   728  0609  0836               	movf	??_main+3,w
   729  060A  00A3               	movwf	?_sprintf+3
   730  060B  0837               	movf	??_main+4,w
   731  060C  00A4               	movwf	?_sprintf+4
   732  060D  0853               	movf	main@dt+5,w
   733  060E  00B8               	movwf	??_main+5
   734  060F  01B9               	clrf	??_main+6
   735  0610  0838               	movf	??_main+5,w
   736  0611  00A5               	movwf	?_sprintf+5
   737  0612  0839               	movf	??_main+6,w
   738  0613  00A6               	movwf	?_sprintf+6
   739  0614  3044               	movlw	(low (main@b| 0))& (0+255)
   740  0615  120A  118A  2676  120A  118A  	fcall	_sprintf
   741  061A                     l1640:
   742  061A  3003               	movlw	3
   743  061B  1283               	bcf	3,5	;RP0=0, select bank0
   744  061C  1303               	bcf	3,6	;RP1=0, select bank0
   745  061D  00B3               	movwf	??_main
   746  061E  0833               	movf	??_main,w
   747  061F  00F4               	movwf	Lcd_Set_Cursor@b
   748  0620  3001               	movlw	1
   749  0621  120A  118A  23E3  120A  118A  	fcall	_Lcd_Set_Cursor
   750  0626                     l1642:
   751  0626  3044               	movlw	(low (main@b| 0))& (0+255)
   752  0627  120A  118A  2264  120A  118A  	fcall	_Lcd_Write_String
   753  062C                     l1644:
   754  062C  3003               	movlw	3
   755  062D  1283               	bcf	3,5	;RP0=0, select bank0
   756  062E  1303               	bcf	3,6	;RP1=0, select bank0
   757  062F  00B3               	movwf	??_main
   758  0630  0833               	movf	??_main,w
   759  0631  00F4               	movwf	Lcd_Set_Cursor@b
   760  0632  3002               	movlw	2
   761  0633  120A  118A  23E3  120A  118A  	fcall	_Lcd_Set_Cursor
   762  0638                     l1646:
   763  0638  303A               	movlw	(low (main@a| 0))& (0+255)
   764  0639  120A  118A  2264  120A  118A  	fcall	_Lcd_Write_String
   765  063E                     l1648:
   766  063E  3017               	movlw	23
   767  063F  1283               	bcf	3,5	;RP0=0, select bank0
   768  0640  1303               	bcf	3,6	;RP1=0, select bank0
   769  0641  0651               	xorwf	main@dt+3,w
   770  0642  1D03               	btfss	3,2
   771  0643  2E45               	goto	u1251
   772  0644  2E46               	goto	u1250
   773  0645                     u1251:
   774  0645  2E52               	goto	l131
   775  0646                     u1250:
   776  0646                     l1650:
   777  0646  3034               	movlw	52
   778  0647  0652               	xorwf	main@dt+4,w
   779  0648  1D03               	btfss	3,2
   780  0649  2E4B               	goto	u1261
   781  064A  2E4C               	goto	u1260
   782  064B                     u1261:
   783  064B  2E52               	goto	l131
   784  064C                     u1260:
   785  064C                     l1652:
   786  064C  0853               	movf	main@dt+5,w
   787  064D  1D03               	btfss	3,2
   788  064E  2E50               	goto	u1271
   789  064F  2E51               	goto	u1270
   790  0650                     u1271:
   791  0650  2E52               	goto	l131
   792  0651                     u1270:
   793  0651                     l1654:
   794  0651  1488               	bsf	8,1	;volatile
   795  0652                     l131:
   796  0652  1B86               	btfsc	6,7	;volatile
   797  0653  2E55               	goto	u1281
   798  0654  2E56               	goto	u1280
   799  0655                     u1281:
   800  0655  2E67               	goto	l1662
   801  0656                     u1280:
   802  0656                     l1656:
   803  0656  3062               	movlw	98
   804  0657  1283               	bcf	3,5	;RP0=0, select bank0
   805  0658  1303               	bcf	3,6	;RP1=0, select bank0
   806  0659  00B4               	movwf	??_main+1
   807  065A  3065               	movlw	101
   808  065B  00B3               	movwf	??_main
   809  065C                     u1307:
   810  065C  0BB3               	decfsz	??_main,f
   811  065D  2E5C               	goto	u1307
   812  065E  0BB4               	decfsz	??_main+1,f
   813  065F  2E5C               	goto	u1307
   814  0660                     l1658:
   815  0660  1283               	bcf	3,5	;RP0=0, select bank0
   816  0661  1303               	bcf	3,6	;RP1=0, select bank0
   817  0662  1B86               	btfsc	6,7	;volatile
   818  0663  2E65               	goto	u1291
   819  0664  2E66               	goto	u1290
   820  0665                     u1291:
   821  0665  2E67               	goto	l1662
   822  0666                     u1290:
   823  0666                     l1660:
   824  0666  1488               	bsf	8,1	;volatile
   825  0667                     l1662:
   826  0667  3021               	movlw	33
   827  0668  1283               	bcf	3,5	;RP0=0, select bank0
   828  0669  1303               	bcf	3,6	;RP1=0, select bank0
   829  066A  00B4               	movwf	??_main+1
   830  066B  3075               	movlw	117
   831  066C  00B3               	movwf	??_main
   832  066D                     u1317:
   833  066D  0BB3               	decfsz	??_main,f
   834  066E  2E6D               	goto	u1317
   835  066F  0BB4               	decfsz	??_main+1,f
   836  0670  2E6D               	goto	u1317
   837  0671  2E72               	nop2
   838  0672  2DD2               	goto	l1634
   839  0673  120A  118A  2800   	ljmp	start
   840  0676                     __end_of_main:
   841                           
   842                           	psect	text1
   843  0676                     __ptext1:	
   844 ;; *************** function _sprintf *****************
   845 ;; Defined at:
   846 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  sp              1    wreg     PTR unsigned char 
   849 ;;		 -> main@b(10), main@a(10), 
   850 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   851 ;;		 -> STR_2(13), STR_1(13), 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  sp              1   17[BANK0 ] PTR unsigned char 
   854 ;;		 -> main@b(10), main@a(10), 
   855 ;;  tmpval          4    0        struct .
   856 ;;  width           2   15[BANK0 ] int 
   857 ;;  val             2   13[BANK0 ] unsigned int 
   858 ;;  cp              2    0        PTR const unsigned char 
   859 ;;  len             2    0        unsigned int 
   860 ;;  c               1   18[BANK0 ] unsigned char 
   861 ;;  flag            1   12[BANK0 ] unsigned char 
   862 ;;  prec            1   11[BANK0 ] char 
   863 ;;  ap              1   10[BANK0 ] PTR void [1]
   864 ;;		 -> ?_sprintf(2), 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  2    0[BANK0 ] int 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       7       0       0       0
   875 ;;      Locals:         0       9       0       0       0
   876 ;;      Temps:          0       3       0       0       0
   877 ;;      Totals:         0      19       0       0       0
   878 ;;Total ram usage:       19 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 1
   881 ;; This function calls:
   882 ;;		___lwdiv
   883 ;;		___lwmod
   884 ;;		___wmul
   885 ;;		_isdigit
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891  0676                     _sprintf:	
   892                           ;psect for function _sprintf
   893                           
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   897                           ;sprintf@sp stored from wreg
   898  0676  1283               	bcf	3,5	;RP0=0, select bank0
   899  0677  1303               	bcf	3,6	;RP1=0, select bank0
   900  0678  00B1               	movwf	sprintf@sp
   901  0679                     l1502:
   902                           
   903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
   904  0679  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   905  067A  00A7               	movwf	??_sprintf
   906  067B  0827               	movf	??_sprintf,w
   907  067C  00AA               	movwf	sprintf@ap
   908                           
   909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   910  067D  2FE5               	goto	l1584
   911  067E                     l1504:
   912                           
   913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   914  067E  3025               	movlw	37
   915  067F  0632               	xorwf	sprintf@c,w
   916  0680  1903               	btfsc	3,2
   917  0681  2E83               	goto	u1101
   918  0682  2E84               	goto	u1100
   919  0683                     u1101:
   920  0683  2E90               	goto	l1510
   921  0684                     u1100:
   922  0684                     l1506:
   923                           
   924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   925  0684  0832               	movf	sprintf@c,w
   926  0685  00A7               	movwf	??_sprintf
   927  0686  0831               	movf	sprintf@sp,w
   928  0687  0084               	movwf	4
   929  0688  0827               	movf	??_sprintf,w
   930  0689  1383               	bcf	3,7	;select IRP bank0
   931  068A  0080               	movwf	0
   932  068B                     l1508:
   933  068B  3001               	movlw	1
   934  068C  00A7               	movwf	??_sprintf
   935  068D  0827               	movf	??_sprintf,w
   936  068E  07B1               	addwf	sprintf@sp,f
   937                           
   938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
   939  068F  2FE5               	goto	l1584
   940  0690                     l1510:
   941                           
   942                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 563:   width = 0;
   943  0690  01AF               	clrf	sprintf@width
   944  0691  01B0               	clrf	sprintf@width+1
   945                           
   946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   947  0692  01AC               	clrf	sprintf@flag
   948  0693                     l1512:
   949                           
   950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
   951  0693  0820               	movf	sprintf@f,w
   952  0694  0084               	movwf	4
   953  0695  120A  118A  2003  120A  118A  	fcall	stringdir
   954  069A  120A  118A  220B  120A  118A  	fcall	_isdigit
   955  069F  1C03               	btfss	3,0
   956  06A0  2EA2               	goto	u1111
   957  06A1  2EA3               	goto	u1110
   958  06A2                     u1111:
   959  06A2  2EE3               	goto	l1526
   960  06A3                     u1110:
   961  06A3                     l1514:
   962                           
   963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
   964  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   965  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   966  06A5  01AF               	clrf	sprintf@width
   967  06A6  01B0               	clrf	sprintf@width+1
   968  06A7                     l1516:
   969                           
   970                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
   971  06A7  300A               	movlw	10
   972  06A8  00F0               	movwf	___wmul@multiplier
   973  06A9  3000               	movlw	0
   974  06AA  00F1               	movwf	___wmul@multiplier+1
   975  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   976  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   977  06AD  0830               	movf	sprintf@width+1,w
   978  06AE  00F3               	movwf	___wmul@multiplicand+1
   979  06AF  082F               	movf	sprintf@width,w
   980  06B0  00F2               	movwf	___wmul@multiplicand
   981  06B1  120A  118A  22A7  120A  118A  	fcall	___wmul
   982  06B6  0871               	movf	?___wmul+1,w
   983  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   984  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   985  06B9  00B0               	movwf	sprintf@width+1
   986  06BA  0870               	movf	?___wmul,w
   987  06BB  00AF               	movwf	sprintf@width
   988  06BC                     l1518:
   989                           
   990                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
   991  06BC  0820               	movf	sprintf@f,w
   992  06BD  0084               	movwf	4
   993  06BE  120A  118A  2003  120A  118A  	fcall	stringdir
   994  06C3  3ED0               	addlw	208
   995  06C4  00A7               	movwf	??_sprintf
   996  06C5  30FF               	movlw	255
   997  06C6  1803               	skipnc
   998  06C7  3000               	movlw	0
   999  06C8  00A8               	movwf	??_sprintf+1
  1000  06C9  0827               	movf	??_sprintf,w
  1001  06CA  07AF               	addwf	sprintf@width,f
  1002  06CB  1803               	skipnc
  1003  06CC  0AB0               	incf	sprintf@width+1,f
  1004  06CD  0828               	movf	??_sprintf+1,w
  1005  06CE  07B0               	addwf	sprintf@width+1,f
  1006  06CF                     l1520:
  1007  06CF  3001               	movlw	1
  1008  06D0  00A7               	movwf	??_sprintf
  1009  06D1  0827               	movf	??_sprintf,w
  1010  06D2  07A0               	addwf	sprintf@f,f
  1011  06D3                     l1522:
  1012                           
  1013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1014  06D3  0820               	movf	sprintf@f,w
  1015  06D4  0084               	movwf	4
  1016  06D5  120A  118A  2003  120A  118A  	fcall	stringdir
  1017  06DA  120A  118A  220B  120A  118A  	fcall	_isdigit
  1018  06DF  1803               	btfsc	3,0
  1019  06E0  2EE2               	goto	u1121
  1020  06E1  2EE3               	goto	u1120
  1021  06E2                     u1121:
  1022  06E2  2EA7               	goto	l1516
  1023  06E3                     u1120:
  1024  06E3                     l1526:
  1025  06E3  3001               	movlw	1
  1026  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1027  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1028  06E6  07A0               	addwf	sprintf@f,f
  1029  06E7  30FF               	movlw	-1
  1030  06E8  0720               	addwf	sprintf@f,w
  1031  06E9  0084               	movwf	4
  1032  06EA  120A  118A  2003  120A  118A  	fcall	stringdir
  1033  06EF  00B2               	movwf	sprintf@c
  1034  06F0  00A7               	movwf	??_sprintf
  1035  06F1  01A8               	clrf	??_sprintf+1
  1036                           
  1037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1038                           ; Switch size 1, requested type "simple"
  1039                           ; Number of cases is 1, Range of values is 0 to 0
  1040                           ; switch strategies available:
  1041                           ; Name         Instructions Cycles
  1042                           ; simple_byte            4     3 (average)
  1043                           ; direct_byte           11     8 (fixed)
  1044                           ; jumptable            260     6 (fixed)
  1045                           ;	Chosen strategy is simple_byte
  1046  06F2  0828               	movf	??_sprintf+1,w
  1047  06F3  3A00               	xorlw	0	; case 0
  1048  06F4  1903               	skipnz
  1049  06F5  2EF7               	goto	l1684
  1050  06F6  2FE5               	goto	l1584
  1051  06F7                     l1684:
  1052                           
  1053                           ; Switch size 1, requested type "simple"
  1054                           ; Number of cases is 3, Range of values is 0 to 105
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte           10     6 (average)
  1058                           ; jumptable            260     6 (fixed)
  1059                           ;	Chosen strategy is simple_byte
  1060  06F7  0827               	movf	??_sprintf,w
  1061  06F8  3A00               	xorlw	0	; case 0
  1062  06F9  1903               	skipnz
  1063  06FA  2FF7               	goto	l1586
  1064  06FB  3A64               	xorlw	100	; case 100
  1065  06FC  1903               	skipnz
  1066  06FD  2F02               	goto	l1528
  1067  06FE  3A0D               	xorlw	13	; case 105
  1068  06FF  1903               	skipnz
  1069  0700  2F02               	goto	l1528
  1070  0701  2FE5               	goto	l1584
  1071  0702                     l1528:
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1074  0702  082A               	movf	sprintf@ap,w
  1075  0703  0084               	movwf	4
  1076  0704  1383               	bcf	3,7	;select IRP bank0
  1077  0705  0800               	movf	0,w
  1078  0706  00AD               	movwf	sprintf@val
  1079  0707  0A84               	incf	4,f
  1080  0708  0800               	movf	0,w
  1081  0709  00AE               	movwf	sprintf@val+1
  1082  070A                     l1530:
  1083  070A  3002               	movlw	2
  1084  070B  00A7               	movwf	??_sprintf
  1085  070C  0827               	movf	??_sprintf,w
  1086  070D  07AA               	addwf	sprintf@ap,f
  1087  070E                     l1532:
  1088                           
  1089                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1090  070E  1FAE               	btfss	sprintf@val+1,7
  1091  070F  2F11               	goto	u1131
  1092  0710  2F12               	goto	u1130
  1093  0711                     u1131:
  1094  0711  2F1B               	goto	l1538
  1095  0712                     u1130:
  1096  0712                     l1534:
  1097                           
  1098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1099  0712  3003               	movlw	3
  1100  0713  00A7               	movwf	??_sprintf
  1101  0714  0827               	movf	??_sprintf,w
  1102  0715  04AC               	iorwf	sprintf@flag,f
  1103  0716                     l1536:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1106  0716  09AD               	comf	sprintf@val,f
  1107  0717  09AE               	comf	sprintf@val+1,f
  1108  0718  0AAD               	incf	sprintf@val,f
  1109  0719  1903               	skipnz
  1110  071A  0AAE               	incf	sprintf@val+1,f
  1111  071B                     l1538:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1114  071B  01B2               	clrf	sprintf@c
  1115  071C  0AB2               	incf	sprintf@c,f
  1116  071D                     l1544:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1119  071D  0832               	movf	sprintf@c,w
  1120  071E  00A7               	movwf	??_sprintf
  1121  071F  0727               	addwf	??_sprintf,w
  1122  0720  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1123  0721  0084               	movwf	4
  1124  0722  120A  118A  2003  120A  118A  	fcall	stringdir
  1125  0727  00A8               	movwf	??_sprintf+1
  1126  0728  120A  118A  2003  120A  118A  	fcall	stringdir
  1127  072D  00A9               	movwf	??_sprintf+2
  1128  072E  0829               	movf	??_sprintf+2,w
  1129  072F  022E               	subwf	sprintf@val+1,w
  1130  0730  1D03               	skipz
  1131  0731  2F34               	goto	u1145
  1132  0732  0828               	movf	??_sprintf+1,w
  1133  0733  022D               	subwf	sprintf@val,w
  1134  0734                     u1145:
  1135  0734  1803               	skipnc
  1136  0735  2F37               	goto	u1141
  1137  0736  2F38               	goto	u1140
  1138  0737                     u1141:
  1139  0737  2F39               	goto	l1548
  1140  0738                     u1140:
  1141  0738  2F43               	goto	l1550
  1142  0739                     l1548:
  1143  0739  3001               	movlw	1
  1144  073A  00A7               	movwf	??_sprintf
  1145  073B  0827               	movf	??_sprintf,w
  1146  073C  07B2               	addwf	sprintf@c,f
  1147  073D  3005               	movlw	5
  1148  073E  0632               	xorwf	sprintf@c,w
  1149  073F  1D03               	btfss	3,2
  1150  0740  2F42               	goto	u1151
  1151  0741  2F43               	goto	u1150
  1152  0742                     u1151:
  1153  0742  2F1D               	goto	l1544
  1154  0743                     u1150:
  1155  0743                     l1550:
  1156                           
  1157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1158  0743  082F               	movf	sprintf@width,w
  1159  0744  0430               	iorwf	sprintf@width+1,w
  1160  0745  1903               	btfsc	3,2
  1161  0746  2F48               	goto	u1161
  1162  0747  2F49               	goto	u1160
  1163  0748                     u1161:
  1164  0748  2F55               	goto	l246
  1165  0749                     u1160:
  1166  0749                     l1552:
  1167  0749  082C               	movf	sprintf@flag,w
  1168  074A  3903               	andlw	3
  1169  074B  1903               	btfsc	3,2
  1170  074C  2F4E               	goto	u1171
  1171  074D  2F4F               	goto	u1170
  1172  074E                     u1171:
  1173  074E  2F55               	goto	l246
  1174  074F                     u1170:
  1175  074F                     l1554:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1178  074F  30FF               	movlw	255
  1179  0750  07AF               	addwf	sprintf@width,f
  1180  0751  1803               	skipnc
  1181  0752  0AB0               	incf	sprintf@width+1,f
  1182  0753  30FF               	movlw	255
  1183  0754  07B0               	addwf	sprintf@width+1,f
  1184  0755                     l246:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1187  0755  0830               	movf	sprintf@width+1,w
  1188  0756  3A80               	xorlw	128
  1189  0757  3C80               	sublw	128
  1190  0758  1D03               	skipz
  1191  0759  2F5C               	goto	u1185
  1192  075A  082F               	movf	sprintf@width,w
  1193  075B  0232               	subwf	sprintf@c,w
  1194  075C                     u1185:
  1195  075C  1803               	skipnc
  1196  075D  2F5F               	goto	u1181
  1197  075E  2F60               	goto	u1180
  1198  075F                     u1181:
  1199  075F  2F6C               	goto	l1558
  1200  0760                     u1180:
  1201  0760                     l1556:
  1202                           
  1203                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1204  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0762  0832               	movf	sprintf@c,w
  1207  0763  00A7               	movwf	??_sprintf
  1208  0764  01A8               	clrf	??_sprintf+1
  1209  0765  0827               	movf	??_sprintf,w
  1210  0766  02AF               	subwf	sprintf@width,f
  1211  0767  0828               	movf	??_sprintf+1,w
  1212  0768  1C03               	skipc
  1213  0769  03B0               	decf	sprintf@width+1,f
  1214  076A  02B0               	subwf	sprintf@width+1,f
  1215  076B  2F70               	goto	l1560
  1216  076C                     l1558:
  1217                           
  1218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1219  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1220  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1221  076E  01AF               	clrf	sprintf@width
  1222  076F  01B0               	clrf	sprintf@width+1
  1223  0770                     l1560:
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1226  0770  082F               	movf	sprintf@width,w
  1227  0771  0430               	iorwf	sprintf@width+1,w
  1228  0772  1903               	btfsc	3,2
  1229  0773  2F75               	goto	u1191
  1230  0774  2F76               	goto	u1190
  1231  0775                     u1191:
  1232  0775  2F8D               	goto	l1568
  1233  0776                     u1190:
  1234  0776                     l1562:
  1235                           
  1236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1237  0776  3020               	movlw	32
  1238  0777  00A7               	movwf	??_sprintf
  1239  0778  0831               	movf	sprintf@sp,w
  1240  0779  0084               	movwf	4
  1241  077A  0827               	movf	??_sprintf,w
  1242  077B  1383               	bcf	3,7	;select IRP bank0
  1243  077C  0080               	movwf	0
  1244  077D                     l1564:
  1245  077D  3001               	movlw	1
  1246  077E  00A7               	movwf	??_sprintf
  1247  077F  0827               	movf	??_sprintf,w
  1248  0780  07B1               	addwf	sprintf@sp,f
  1249  0781                     l1566:
  1250  0781  30FF               	movlw	255
  1251  0782  07AF               	addwf	sprintf@width,f
  1252  0783  1803               	skipnc
  1253  0784  0AB0               	incf	sprintf@width+1,f
  1254  0785  30FF               	movlw	255
  1255  0786  07B0               	addwf	sprintf@width+1,f
  1256  0787  082F               	movf	sprintf@width,w
  1257  0788  0430               	iorwf	sprintf@width+1,w
  1258  0789  1D03               	btfss	3,2
  1259  078A  2F8C               	goto	u1201
  1260  078B  2F8D               	goto	u1200
  1261  078C                     u1201:
  1262  078C  2F76               	goto	l1562
  1263  078D                     u1200:
  1264  078D                     l1568:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1267  078D  082C               	movf	sprintf@flag,w
  1268  078E  3903               	andlw	3
  1269  078F  1903               	btfsc	3,2
  1270  0790  2F92               	goto	u1211
  1271  0791  2F93               	goto	u1210
  1272  0792                     u1211:
  1273  0792  2F9E               	goto	l1574
  1274  0793                     u1210:
  1275  0793                     l1570:
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1278  0793  302D               	movlw	45
  1279  0794  00A7               	movwf	??_sprintf
  1280  0795  0831               	movf	sprintf@sp,w
  1281  0796  0084               	movwf	4
  1282  0797  0827               	movf	??_sprintf,w
  1283  0798  1383               	bcf	3,7	;select IRP bank0
  1284  0799  0080               	movwf	0
  1285  079A                     l1572:
  1286  079A  3001               	movlw	1
  1287  079B  00A7               	movwf	??_sprintf
  1288  079C  0827               	movf	??_sprintf,w
  1289  079D  07B1               	addwf	sprintf@sp,f
  1290  079E                     l1574:
  1291                           
  1292                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1293  079E  0832               	movf	sprintf@c,w
  1294  079F  00A7               	movwf	??_sprintf
  1295  07A0  0827               	movf	??_sprintf,w
  1296  07A1  00AB               	movwf	sprintf@prec
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1299  07A2  2FDC               	goto	l1582
  1300  07A3                     l1576:
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1303  07A3  300A               	movlw	10
  1304  07A4  00F8               	movwf	___lwmod@divisor
  1305  07A5  3000               	movlw	0
  1306  07A6  00F9               	movwf	___lwmod@divisor+1
  1307  07A7  082B               	movf	sprintf@prec,w
  1308  07A8  00A7               	movwf	??_sprintf
  1309  07A9  0727               	addwf	??_sprintf,w
  1310  07AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1311  07AB  0084               	movwf	4
  1312  07AC  120A  118A  2003  120A  118A  	fcall	stringdir
  1313  07B1  00F0               	movwf	___lwdiv@divisor
  1314  07B2  120A  118A  2003  120A  118A  	fcall	stringdir
  1315  07B7  00F1               	movwf	___lwdiv@divisor+1
  1316  07B8  082E               	movf	sprintf@val+1,w
  1317  07B9  00F3               	movwf	___lwdiv@dividend+1
  1318  07BA  082D               	movf	sprintf@val,w
  1319  07BB  00F2               	movwf	___lwdiv@dividend
  1320  07BC  120A  118A  239F  120A  118A  	fcall	___lwdiv
  1321  07C1  0871               	movf	?___lwdiv+1,w
  1322  07C2  00FB               	movwf	___lwmod@dividend+1
  1323  07C3  0870               	movf	?___lwdiv,w
  1324  07C4  00FA               	movwf	___lwmod@dividend
  1325  07C5  120A  118A  2365  120A  118A  	fcall	___lwmod
  1326  07CA  0878               	movf	?___lwmod,w
  1327  07CB  3E30               	addlw	48
  1328  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1329  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1330  07CE  00A8               	movwf	??_sprintf+1
  1331  07CF  0828               	movf	??_sprintf+1,w
  1332  07D0  00B2               	movwf	sprintf@c
  1333  07D1                     l1578:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1336  07D1  0832               	movf	sprintf@c,w
  1337  07D2  00A7               	movwf	??_sprintf
  1338  07D3  0831               	movf	sprintf@sp,w
  1339  07D4  0084               	movwf	4
  1340  07D5  0827               	movf	??_sprintf,w
  1341  07D6  1383               	bcf	3,7	;select IRP bank0
  1342  07D7  0080               	movwf	0
  1343  07D8                     l1580:
  1344  07D8  3001               	movlw	1
  1345  07D9  00A7               	movwf	??_sprintf
  1346  07DA  0827               	movf	??_sprintf,w
  1347  07DB  07B1               	addwf	sprintf@sp,f
  1348  07DC                     l1582:
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1351  07DC  30FF               	movlw	255
  1352  07DD  00A7               	movwf	??_sprintf
  1353  07DE  0827               	movf	??_sprintf,w
  1354  07DF  07AB               	addwf	sprintf@prec,f
  1355  07E0  0A2B               	incf	sprintf@prec,w
  1356  07E1  1D03               	btfss	3,2
  1357  07E2  2FE4               	goto	u1221
  1358  07E3  2FE5               	goto	u1220
  1359  07E4                     u1221:
  1360  07E4  2FA3               	goto	l1576
  1361  07E5                     u1220:
  1362  07E5                     l1584:
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1365  07E5  3001               	movlw	1
  1366  07E6  07A0               	addwf	sprintf@f,f
  1367  07E7  30FF               	movlw	-1
  1368  07E8  0720               	addwf	sprintf@f,w
  1369  07E9  0084               	movwf	4
  1370  07EA  120A  118A  2003  120A  118A  	fcall	stringdir
  1371  07EF  00A7               	movwf	??_sprintf
  1372  07F0  0827               	movf	??_sprintf,w
  1373  07F1  00B2               	movwf	sprintf@c
  1374  07F2  0832               	movf	sprintf@c,w
  1375  07F3  1D03               	btfss	3,2
  1376  07F4  2FF6               	goto	u1231
  1377  07F5  2FF7               	goto	u1230
  1378  07F6                     u1231:
  1379  07F6  2E7E               	goto	l1504
  1380  07F7                     u1230:
  1381  07F7                     l1586:
  1382                           
  1383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1384  07F7  0831               	movf	sprintf@sp,w
  1385  07F8  0084               	movwf	4
  1386  07F9  1383               	bcf	3,7	;select IRP bank0
  1387  07FA  0180               	clrf	0
  1388  07FB                     l257:
  1389  07FB  0008               	return
  1390  07FC                     __end_of_sprintf:
  1391                           
  1392                           	psect	text2
  1393  020B                     __ptext2:	
  1394 ;; *************** function _isdigit *****************
  1395 ;; Defined at:
  1396 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  c               1    wreg     unsigned char 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  c               1    1[COMMON] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;		None               void
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         2       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0
  1413 ;;      Totals:         2       0       0       0       0
  1414 ;;Total ram usage:        2 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_sprintf
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423  020B                     _isdigit:	
  1424                           ;psect for function _isdigit
  1425                           
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1429                           ;isdigit@c stored from wreg
  1430  020B  00F1               	movwf	isdigit@c
  1431  020C                     l1324:
  1432  020C  01F0               	clrf	_isdigit$653
  1433  020D                     l1326:
  1434  020D  303A               	movlw	58
  1435  020E  0271               	subwf	isdigit@c,w
  1436  020F  1803               	skipnc
  1437  0210  2A12               	goto	u771
  1438  0211  2A13               	goto	u770
  1439  0212                     u771:
  1440  0212  2A1B               	goto	l1332
  1441  0213                     u770:
  1442  0213                     l1328:
  1443  0213  3030               	movlw	48
  1444  0214  0271               	subwf	isdigit@c,w
  1445  0215  1C03               	skipc
  1446  0216  2A18               	goto	u781
  1447  0217  2A19               	goto	u780
  1448  0218                     u781:
  1449  0218  2A1B               	goto	l1332
  1450  0219                     u780:
  1451  0219                     l1330:
  1452  0219  01F0               	clrf	_isdigit$653
  1453  021A  0AF0               	incf	_isdigit$653,f
  1454  021B                     l1332:
  1455  021B  0C70               	rrf	_isdigit$653,w
  1456  021C                     l714:
  1457  021C  0008               	return
  1458  021D                     __end_of_isdigit:
  1459                           
  1460                           	psect	text3
  1461  02A7                     __ptext3:	
  1462 ;; *************** function ___wmul *****************
  1463 ;; Defined at:
  1464 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  multiplier      2    0[COMMON] unsigned int 
  1467 ;;  multiplicand    2    2[COMMON] unsigned int 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  product         2    4[COMMON] unsigned int 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  2    0[COMMON] unsigned int 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1479 ;;      Params:         4       0       0       0       0
  1480 ;;      Locals:         2       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0
  1482 ;;      Totals:         6       0       0       0       0
  1483 ;;Total ram usage:        6 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_sprintf
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492  02A7                     ___wmul:	
  1493                           ;psect for function ___wmul
  1494                           
  1495  02A7                     l1336:	
  1496                           ;incstack = 0
  1497                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1498                           
  1499  02A7  01F4               	clrf	___wmul@product
  1500  02A8  01F5               	clrf	___wmul@product+1
  1501  02A9                     l1338:
  1502  02A9  1C70               	btfss	___wmul@multiplier,0
  1503  02AA  2AAC               	goto	u791
  1504  02AB  2AAD               	goto	u790
  1505  02AC                     u791:
  1506  02AC  2AB3               	goto	l261
  1507  02AD                     u790:
  1508  02AD                     l1340:
  1509  02AD  0872               	movf	___wmul@multiplicand,w
  1510  02AE  07F4               	addwf	___wmul@product,f
  1511  02AF  1803               	skipnc
  1512  02B0  0AF5               	incf	___wmul@product+1,f
  1513  02B1  0873               	movf	___wmul@multiplicand+1,w
  1514  02B2  07F5               	addwf	___wmul@product+1,f
  1515  02B3                     l261:
  1516  02B3  3001               	movlw	1
  1517  02B4                     u805:
  1518  02B4  1003               	clrc
  1519  02B5  0DF2               	rlf	___wmul@multiplicand,f
  1520  02B6  0DF3               	rlf	___wmul@multiplicand+1,f
  1521  02B7  3EFF               	addlw	-1
  1522  02B8  1D03               	skipz
  1523  02B9  2AB4               	goto	u805
  1524  02BA                     l1342:
  1525  02BA  3001               	movlw	1
  1526  02BB                     u815:
  1527  02BB  1003               	clrc
  1528  02BC  0CF1               	rrf	___wmul@multiplier+1,f
  1529  02BD  0CF0               	rrf	___wmul@multiplier,f
  1530  02BE  3EFF               	addlw	-1
  1531  02BF  1D03               	skipz
  1532  02C0  2ABB               	goto	u815
  1533  02C1                     l1344:
  1534  02C1  0870               	movf	___wmul@multiplier,w
  1535  02C2  0471               	iorwf	___wmul@multiplier+1,w
  1536  02C3  1D03               	btfss	3,2
  1537  02C4  2AC6               	goto	u821
  1538  02C5  2AC7               	goto	u820
  1539  02C6                     u821:
  1540  02C6  2AA9               	goto	l1338
  1541  02C7                     u820:
  1542  02C7                     l1346:
  1543  02C7  0875               	movf	___wmul@product+1,w
  1544  02C8  00F1               	movwf	?___wmul+1
  1545  02C9  0874               	movf	___wmul@product,w
  1546  02CA  00F0               	movwf	?___wmul
  1547  02CB                     l263:
  1548  02CB  0008               	return
  1549  02CC                     __end_of___wmul:
  1550                           
  1551                           	psect	text4
  1552  0365                     __ptext4:	
  1553 ;; *************** function ___lwmod *****************
  1554 ;; Defined at:
  1555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  divisor         2    8[COMMON] unsigned int 
  1558 ;;  dividend        2   10[COMMON] unsigned int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  counter         1   13[COMMON] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  2    8[COMMON] unsigned int 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         4       0       0       0       0
  1571 ;;      Locals:         1       0       0       0       0
  1572 ;;      Temps:          1       0       0       0       0
  1573 ;;      Totals:         6       0       0       0       0
  1574 ;;Total ram usage:        6 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_sprintf
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583  0365                     ___lwmod:	
  1584                           ;psect for function ___lwmod
  1585                           
  1586  0365                     l1400:	
  1587                           ;incstack = 0
  1588                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1589                           
  1590  0365  0878               	movf	___lwmod@divisor,w
  1591  0366  0479               	iorwf	___lwmod@divisor+1,w
  1592  0367  1903               	btfsc	3,2
  1593  0368  2B6A               	goto	u971
  1594  0369  2B6B               	goto	u970
  1595  036A                     u971:
  1596  036A  2B9A               	goto	l1418
  1597  036B                     u970:
  1598  036B                     l1402:
  1599  036B  01FD               	clrf	___lwmod@counter
  1600  036C  0AFD               	incf	___lwmod@counter,f
  1601  036D  2B79               	goto	l1408
  1602  036E                     l1404:
  1603  036E  3001               	movlw	1
  1604  036F                     u985:
  1605  036F  1003               	clrc
  1606  0370  0DF8               	rlf	___lwmod@divisor,f
  1607  0371  0DF9               	rlf	___lwmod@divisor+1,f
  1608  0372  3EFF               	addlw	-1
  1609  0373  1D03               	skipz
  1610  0374  2B6F               	goto	u985
  1611  0375                     l1406:
  1612  0375  3001               	movlw	1
  1613  0376  00FC               	movwf	??___lwmod
  1614  0377  087C               	movf	??___lwmod,w
  1615  0378  07FD               	addwf	___lwmod@counter,f
  1616  0379                     l1408:
  1617  0379  1FF9               	btfss	___lwmod@divisor+1,7
  1618  037A  2B7C               	goto	u991
  1619  037B  2B7D               	goto	u990
  1620  037C                     u991:
  1621  037C  2B6E               	goto	l1404
  1622  037D                     u990:
  1623  037D                     l1410:
  1624  037D  0879               	movf	___lwmod@divisor+1,w
  1625  037E  027B               	subwf	___lwmod@dividend+1,w
  1626  037F  1D03               	skipz
  1627  0380  2B83               	goto	u1005
  1628  0381  0878               	movf	___lwmod@divisor,w
  1629  0382  027A               	subwf	___lwmod@dividend,w
  1630  0383                     u1005:
  1631  0383  1C03               	skipc
  1632  0384  2B86               	goto	u1001
  1633  0385  2B87               	goto	u1000
  1634  0386                     u1001:
  1635  0386  2B8D               	goto	l1414
  1636  0387                     u1000:
  1637  0387                     l1412:
  1638  0387  0878               	movf	___lwmod@divisor,w
  1639  0388  02FA               	subwf	___lwmod@dividend,f
  1640  0389  0879               	movf	___lwmod@divisor+1,w
  1641  038A  1C03               	skipc
  1642  038B  03FB               	decf	___lwmod@dividend+1,f
  1643  038C  02FB               	subwf	___lwmod@dividend+1,f
  1644  038D                     l1414:
  1645  038D  3001               	movlw	1
  1646  038E                     u1015:
  1647  038E  1003               	clrc
  1648  038F  0CF9               	rrf	___lwmod@divisor+1,f
  1649  0390  0CF8               	rrf	___lwmod@divisor,f
  1650  0391  3EFF               	addlw	-1
  1651  0392  1D03               	skipz
  1652  0393  2B8E               	goto	u1015
  1653  0394                     l1416:
  1654  0394  3001               	movlw	1
  1655  0395  02FD               	subwf	___lwmod@counter,f
  1656  0396  1D03               	btfss	3,2
  1657  0397  2B99               	goto	u1021
  1658  0398  2B9A               	goto	u1020
  1659  0399                     u1021:
  1660  0399  2B7D               	goto	l1410
  1661  039A                     u1020:
  1662  039A                     l1418:
  1663  039A  087B               	movf	___lwmod@dividend+1,w
  1664  039B  00F9               	movwf	?___lwmod+1
  1665  039C  087A               	movf	___lwmod@dividend,w
  1666  039D  00F8               	movwf	?___lwmod
  1667  039E                     l543:
  1668  039E  0008               	return
  1669  039F                     __end_of___lwmod:
  1670                           
  1671                           	psect	text5
  1672  039F                     __ptext5:	
  1673 ;; *************** function ___lwdiv *****************
  1674 ;; Defined at:
  1675 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  divisor         2    0[COMMON] unsigned int 
  1678 ;;  dividend        2    2[COMMON] unsigned int 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  quotient        2    5[COMMON] unsigned int 
  1681 ;;  counter         1    7[COMMON] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2    0[COMMON] unsigned int 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         4       0       0       0       0
  1692 ;;      Locals:         3       0       0       0       0
  1693 ;;      Temps:          1       0       0       0       0
  1694 ;;      Totals:         8       0       0       0       0
  1695 ;;Total ram usage:        8 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_sprintf
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704  039F                     ___lwdiv:	
  1705                           ;psect for function ___lwdiv
  1706                           
  1707  039F                     l1374:	
  1708                           ;incstack = 0
  1709                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1710                           
  1711  039F  01F5               	clrf	___lwdiv@quotient
  1712  03A0  01F6               	clrf	___lwdiv@quotient+1
  1713  03A1                     l1376:
  1714  03A1  0870               	movf	___lwdiv@divisor,w
  1715  03A2  0471               	iorwf	___lwdiv@divisor+1,w
  1716  03A3  1903               	btfsc	3,2
  1717  03A4  2BA6               	goto	u901
  1718  03A5  2BA7               	goto	u900
  1719  03A6                     u901:
  1720  03A6  2BDE               	goto	l1396
  1721  03A7                     u900:
  1722  03A7                     l1378:
  1723  03A7  01F7               	clrf	___lwdiv@counter
  1724  03A8  0AF7               	incf	___lwdiv@counter,f
  1725  03A9  2BB5               	goto	l1384
  1726  03AA                     l1380:
  1727  03AA  3001               	movlw	1
  1728  03AB                     u915:
  1729  03AB  1003               	clrc
  1730  03AC  0DF0               	rlf	___lwdiv@divisor,f
  1731  03AD  0DF1               	rlf	___lwdiv@divisor+1,f
  1732  03AE  3EFF               	addlw	-1
  1733  03AF  1D03               	skipz
  1734  03B0  2BAB               	goto	u915
  1735  03B1                     l1382:
  1736  03B1  3001               	movlw	1
  1737  03B2  00F4               	movwf	??___lwdiv
  1738  03B3  0874               	movf	??___lwdiv,w
  1739  03B4  07F7               	addwf	___lwdiv@counter,f
  1740  03B5                     l1384:
  1741  03B5  1FF1               	btfss	___lwdiv@divisor+1,7
  1742  03B6  2BB8               	goto	u921
  1743  03B7  2BB9               	goto	u920
  1744  03B8                     u921:
  1745  03B8  2BAA               	goto	l1380
  1746  03B9                     u920:
  1747  03B9                     l1386:
  1748  03B9  3001               	movlw	1
  1749  03BA                     u935:
  1750  03BA  1003               	clrc
  1751  03BB  0DF5               	rlf	___lwdiv@quotient,f
  1752  03BC  0DF6               	rlf	___lwdiv@quotient+1,f
  1753  03BD  3EFF               	addlw	-1
  1754  03BE  1D03               	skipz
  1755  03BF  2BBA               	goto	u935
  1756  03C0  0871               	movf	___lwdiv@divisor+1,w
  1757  03C1  0273               	subwf	___lwdiv@dividend+1,w
  1758  03C2  1D03               	skipz
  1759  03C3  2BC6               	goto	u945
  1760  03C4  0870               	movf	___lwdiv@divisor,w
  1761  03C5  0272               	subwf	___lwdiv@dividend,w
  1762  03C6                     u945:
  1763  03C6  1C03               	skipc
  1764  03C7  2BC9               	goto	u941
  1765  03C8  2BCA               	goto	u940
  1766  03C9                     u941:
  1767  03C9  2BD1               	goto	l1392
  1768  03CA                     u940:
  1769  03CA                     l1388:
  1770  03CA  0870               	movf	___lwdiv@divisor,w
  1771  03CB  02F2               	subwf	___lwdiv@dividend,f
  1772  03CC  0871               	movf	___lwdiv@divisor+1,w
  1773  03CD  1C03               	skipc
  1774  03CE  03F3               	decf	___lwdiv@dividend+1,f
  1775  03CF  02F3               	subwf	___lwdiv@dividend+1,f
  1776  03D0                     l1390:
  1777  03D0  1475               	bsf	___lwdiv@quotient,0
  1778  03D1                     l1392:
  1779  03D1  3001               	movlw	1
  1780  03D2                     u955:
  1781  03D2  1003               	clrc
  1782  03D3  0CF1               	rrf	___lwdiv@divisor+1,f
  1783  03D4  0CF0               	rrf	___lwdiv@divisor,f
  1784  03D5  3EFF               	addlw	-1
  1785  03D6  1D03               	skipz
  1786  03D7  2BD2               	goto	u955
  1787  03D8                     l1394:
  1788  03D8  3001               	movlw	1
  1789  03D9  02F7               	subwf	___lwdiv@counter,f
  1790  03DA  1D03               	btfss	3,2
  1791  03DB  2BDD               	goto	u961
  1792  03DC  2BDE               	goto	u960
  1793  03DD                     u961:
  1794  03DD  2BB9               	goto	l1386
  1795  03DE                     u960:
  1796  03DE                     l1396:
  1797  03DE  0876               	movf	___lwdiv@quotient+1,w
  1798  03DF  00F1               	movwf	?___lwdiv+1
  1799  03E0  0875               	movf	___lwdiv@quotient,w
  1800  03E1  00F0               	movwf	?___lwdiv
  1801  03E2                     l533:
  1802  03E2  0008               	return
  1803  03E3                     __end_of___lwdiv:
  1804                           
  1805                           	psect	text6
  1806  04F9                     __ptext6:	
  1807 ;; *************** function _rtc_get_datetime *****************
  1808 ;; Defined at:
  1809 ;;		line 140 in file "click.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  add             1    wreg     PTR struct .
  1812 ;;		 -> main@dt(6), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  add             1   10[BANK0 ] PTR struct .
  1815 ;;		 -> main@dt(6), 
  1816 ;;  i               2    8[BANK0 ] int 
  1817 ;;  buff            8    0[BANK0 ] unsigned char [8]
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       0       0       0       0
  1828 ;;      Locals:         0      11       0       0       0
  1829 ;;      Temps:          1       0       0       0       0
  1830 ;;      Totals:         1      11       0       0       0
  1831 ;;Total ram usage:       12 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 2
  1834 ;; This function calls:
  1835 ;;		_BCD2Decimal
  1836 ;;		_I2C_Master_Read
  1837 ;;		_I2C_Master_RepeatedStart
  1838 ;;		_I2C_Master_Start
  1839 ;;		_I2C_Master_Stop
  1840 ;;		_I2C_Master_Wait
  1841 ;;		_I2C_Master_Write
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847  04F9                     _rtc_get_datetime:	
  1848                           ;psect for function _rtc_get_datetime
  1849                           
  1850                           
  1851                           ;incstack = 0
  1852                           ; Regs used in _rtc_get_datetime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1853                           ;rtc_get_datetime@add stored from wreg
  1854  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1855  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1856  04FB  00AA               	movwf	rtc_get_datetime@add
  1857  04FC                     l1474:
  1858                           
  1859                           ;click.c: 140:   add->giay = BCD2Decimal(buff[0]);;click.c: 141: };click.c: 142: ;click.
      +                          c: 143: void rtc_set_datetime(datetime* dt){
  1860  04FC  120A  118A  21D4  120A  118A  	fcall	_I2C_Master_Start
  1861                           
  1862                           ;click.c: 144:     uint8_t buff[8];
  1863  0501  30D0               	movlw	208
  1864  0502  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Write
  1865                           
  1866                           ;click.c: 145:     int i;
  1867  0507  3000               	movlw	0
  1868  0508  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Write
  1869                           
  1870                           ;click.c: 146:     buff[0]=Decimal2BCD(dt->giay);
  1871  050D  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  1872                           
  1873                           ;click.c: 147:     buff[1]=Decimal2BCD(dt->phut);
  1874  0512  120A  118A  21CB  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1875                           
  1876                           ;click.c: 148:     buff[2]=Decimal2BCD(dt->gio);
  1877  0517  30D1               	movlw	209
  1878  0518  120A  118A  21E6  120A  118A  	fcall	_I2C_Master_Write
  1879                           
  1880                           ;click.c: 149:     buff[4]=Decimal2BCD(dt->ngay);
  1881  051D  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  1882  0522                     l1476:
  1883                           
  1884                           ;click.c: 150:     buff[5]=Decimal2BCD(dt->thang);
  1885  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0524  01A8               	clrf	rtc_get_datetime@i
  1888  0525  01A9               	clrf	rtc_get_datetime@i+1
  1889  0526                     l1482:
  1890                           
  1891                           ;click.c: 151:     buff[6]=Decimal2BCD(dt->nam);;click.c: 152:     I2C_Master_Start();
  1892  0526  3001               	movlw	1
  1893  0527  120A  118A  22CC  120A  118A  	fcall	_I2C_Master_Read
  1894  052C  00F8               	movwf	??_rtc_get_datetime
  1895  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1896  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1897  052F  0828               	movf	rtc_get_datetime@i,w
  1898  0530  3E20               	addlw	(low (rtc_get_datetime@buff| 0))& (0+255)
  1899  0531  0084               	movwf	4
  1900  0532  0878               	movf	??_rtc_get_datetime,w
  1901  0533  1383               	bcf	3,7	;select IRP bank0
  1902  0534  0080               	movwf	0
  1903  0535                     l1484:
  1904                           
  1905                           ;click.c: 153:     I2C_Master_Write(0xD0);
  1906  0535  3001               	movlw	1
  1907  0536  07A8               	addwf	rtc_get_datetime@i,f
  1908  0537  1803               	skipnc
  1909  0538  0AA9               	incf	rtc_get_datetime@i+1,f
  1910  0539  3000               	movlw	0
  1911  053A  07A9               	addwf	rtc_get_datetime@i+1,f
  1912  053B                     l1486:
  1913  053B  0829               	movf	rtc_get_datetime@i+1,w
  1914  053C  3A80               	xorlw	128
  1915  053D  00FF               	movwf	btemp+1
  1916  053E  3080               	movlw	128
  1917  053F  027F               	subwf	btemp+1,w
  1918  0540  1D03               	skipz
  1919  0541  2D44               	goto	u1095
  1920  0542  3007               	movlw	7
  1921  0543  0228               	subwf	rtc_get_datetime@i,w
  1922  0544                     u1095:
  1923  0544  1C03               	skipc
  1924  0545  2D47               	goto	u1091
  1925  0546  2D48               	goto	u1090
  1926  0547                     u1091:
  1927  0547  2D26               	goto	l1482
  1928  0548                     u1090:
  1929  0548                     l1488:
  1930                           
  1931                           ;click.c: 154:     I2C_Master_Wait();
  1932  0548  3000               	movlw	0
  1933  0549  120A  118A  22CC  120A  118A  	fcall	_I2C_Master_Read
  1934  054E  00F8               	movwf	??_rtc_get_datetime
  1935  054F  0878               	movf	??_rtc_get_datetime,w
  1936  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0552  00A7               	movwf	rtc_get_datetime@buff+7
  1939                           
  1940                           ;click.c: 155:     I2C_Master_Write(0x00);
  1941  0553  120A  118A  21DD  120A  118A  	fcall	_I2C_Master_Stop
  1942  0558                     l1490:
  1943                           
  1944                           ;click.c: 156:     I2C_Master_Wait();
  1945  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1947  055A  0824               	movf	rtc_get_datetime@buff+4,w
  1948  055B  120A  118A  2232  120A  118A  	fcall	_BCD2Decimal
  1949  0560  00F8               	movwf	??_rtc_get_datetime
  1950  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0563  082A               	movf	rtc_get_datetime@add,w
  1953  0564  0084               	movwf	4
  1954  0565  0878               	movf	??_rtc_get_datetime,w
  1955  0566  1383               	bcf	3,7	;select IRP bank0
  1956  0567  0080               	movwf	0
  1957  0568                     l1492:
  1958                           
  1959                           ;click.c: 157:     for(i=0;i<7;i++)
  1960  0568  0825               	movf	rtc_get_datetime@buff+5,w
  1961  0569  120A  118A  2232  120A  118A  	fcall	_BCD2Decimal
  1962  056E  00F8               	movwf	??_rtc_get_datetime
  1963  056F  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0570  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0571  0A2A               	incf	rtc_get_datetime@add,w
  1966  0572  0084               	movwf	4
  1967  0573  0878               	movf	??_rtc_get_datetime,w
  1968  0574  1383               	bcf	3,7	;select IRP bank0
  1969  0575  0080               	movwf	0
  1970  0576                     l1494:
  1971                           
  1972                           ;click.c: 158:     {
  1973  0576  0826               	movf	rtc_get_datetime@buff+6,w
  1974  0577  120A  118A  2232  120A  118A  	fcall	_BCD2Decimal
  1975  057C  00F8               	movwf	??_rtc_get_datetime
  1976  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1977  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1978  057F  082A               	movf	rtc_get_datetime@add,w
  1979  0580  3E02               	addlw	2
  1980  0581  0084               	movwf	4
  1981  0582  0878               	movf	??_rtc_get_datetime,w
  1982  0583  1383               	bcf	3,7	;select IRP bank0
  1983  0584  0080               	movwf	0
  1984  0585                     l1496:
  1985                           
  1986                           ;click.c: 159:        I2C_Master_Write(buff[i]);
  1987  0585  0822               	movf	rtc_get_datetime@buff+2,w
  1988  0586  120A  118A  2232  120A  118A  	fcall	_BCD2Decimal
  1989  058B  00F8               	movwf	??_rtc_get_datetime
  1990  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1991  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1992  058E  082A               	movf	rtc_get_datetime@add,w
  1993  058F  3E03               	addlw	3
  1994  0590  0084               	movwf	4
  1995  0591  0878               	movf	??_rtc_get_datetime,w
  1996  0592  1383               	bcf	3,7	;select IRP bank0
  1997  0593  0080               	movwf	0
  1998  0594                     l1498:
  1999                           
  2000                           ;click.c: 160:        I2C_Master_Wait();
  2001  0594  0821               	movf	rtc_get_datetime@buff+1,w
  2002  0595  120A  118A  2232  120A  118A  	fcall	_BCD2Decimal
  2003  059A  00F8               	movwf	??_rtc_get_datetime
  2004  059B  1283               	bcf	3,5	;RP0=0, select bank0
  2005  059C  1303               	bcf	3,6	;RP1=0, select bank0
  2006  059D  082A               	movf	rtc_get_datetime@add,w
  2007  059E  3E04               	addlw	4
  2008  059F  0084               	movwf	4
  2009  05A0  0878               	movf	??_rtc_get_datetime,w
  2010  05A1  1383               	bcf	3,7	;select IRP bank0
  2011  05A2  0080               	movwf	0
  2012  05A3                     l1500:
  2013                           
  2014                           ;click.c: 161:     }
  2015  05A3  0820               	movf	rtc_get_datetime@buff,w
  2016  05A4  120A  118A  2232  120A  118A  	fcall	_BCD2Decimal
  2017  05A9  00F8               	movwf	??_rtc_get_datetime
  2018  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2019  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2020  05AC  082A               	movf	rtc_get_datetime@add,w
  2021  05AD  3E05               	addlw	5
  2022  05AE  0084               	movwf	4
  2023  05AF  0878               	movf	??_rtc_get_datetime,w
  2024  05B0  1383               	bcf	3,7	;select IRP bank0
  2025  05B1  0080               	movwf	0
  2026  05B2                     l120:
  2027  05B2  0008               	return
  2028  05B3                     __end_of_rtc_get_datetime:
  2029                           
  2030                           	psect	text7
  2031  01E6                     __ptext7:	
  2032 ;; *************** function _I2C_Master_Write *****************
  2033 ;; Defined at:
  2034 ;;		line 65 in file "click.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  data            1    wreg     unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  data            1    0[COMMON] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       0       0       0       0
  2049 ;;      Locals:         1       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0
  2051 ;;      Totals:         1       0       0       0       0
  2052 ;;Total ram usage:        1 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 1
  2055 ;; This function calls:
  2056 ;;		_I2C_Master_Wait
  2057 ;; This function is called by:
  2058 ;;		_rtc_get_datetime
  2059 ;;		_rtc_set_datetime
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063  01E6                     _I2C_Master_Write:	
  2064                           ;psect for function _I2C_Master_Write
  2065                           
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2069                           ;I2C_Master_Write@data stored from wreg
  2070  01E6  00F0               	movwf	I2C_Master_Write@data
  2071  01E7                     l1274:
  2072                           
  2073                           ;click.c: 65: if(a & 2) RD5 = 1;else RD5 = 0;;click.c: 66: if(a & 4) RD6 = 1;else RD6 = 
      +                          0;;click.c: 67: if(a & 8) RD7 = 1;else RD7 = 0;}
  2074  01E7  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  2075  01EC                     l1276:
  2076                           
  2077                           ;click.c: 68: void Lcd_Cmd(char a)
  2078  01EC  0870               	movf	I2C_Master_Write@data,w
  2079  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2080  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2081  01EF  0093               	movwf	19	;volatile
  2082  01F0                     l75:
  2083  01F0  0008               	return
  2084  01F1                     __end_of_I2C_Master_Write:
  2085                           
  2086                           	psect	text8
  2087  01DD                     __ptext8:	
  2088 ;; *************** function _I2C_Master_Stop *****************
  2089 ;; Defined at:
  2090 ;;		line 54 in file "click.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0, pclath, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2104 ;;      Params:         0       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0
  2107 ;;      Totals:         0       0       0       0       0
  2108 ;;Total ram usage:        0 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 1
  2111 ;; This function calls:
  2112 ;;		_I2C_Master_Wait
  2113 ;; This function is called by:
  2114 ;;		_rtc_get_datetime
  2115 ;;		_rtc_set_datetime
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119  01DD                     _I2C_Master_Stop:	
  2120                           ;psect for function _I2C_Master_Stop
  2121                           
  2122  01DD                     l1266:	
  2123                           ;incstack = 0
  2124                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2125                           
  2126                           
  2127                           ;click.c: 56:     I2C_Master_Wait();
  2128  01DD  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  2129  01E2                     l1268:
  2130                           
  2131                           ;click.c: 57:     if(ack==1) SSPCON2bits.ACKDT=0;
  2132  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2133  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2134  01E4  1511               	bsf	17,2	;volatile
  2135  01E5                     l69:
  2136  01E5  0008               	return
  2137  01E6                     __end_of_I2C_Master_Stop:
  2138                           
  2139                           	psect	text9
  2140  01D4                     __ptext9:	
  2141 ;; *************** function _I2C_Master_Start *****************
  2142 ;; Defined at:
  2143 ;;		line 48 in file "click.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 1
  2164 ;; This function calls:
  2165 ;;		_I2C_Master_Wait
  2166 ;; This function is called by:
  2167 ;;		_rtc_get_datetime
  2168 ;;		_rtc_set_datetime
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172  01D4                     _I2C_Master_Start:	
  2173                           ;psect for function _I2C_Master_Start
  2174                           
  2175  01D4                     l1262:	
  2176                           ;incstack = 0
  2177                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2178                           
  2179                           
  2180                           ;click.c: 50: {
  2181  01D4  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  2182  01D9                     l1264:
  2183                           
  2184                           ;click.c: 51:     unsigned char temp;
  2185  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2186  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2187  01DB  1411               	bsf	17,0	;volatile
  2188  01DC                     l66:
  2189  01DC  0008               	return
  2190  01DD                     __end_of_I2C_Master_Start:
  2191                           
  2192                           	psect	text10
  2193  01CB                     __ptext10:	
  2194 ;; *************** function _I2C_Master_RepeatedStart *****************
  2195 ;; Defined at:
  2196 ;;		line 60 in file "click.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0
  2213 ;;      Totals:         0       0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; Hardware stack levels required when called: 1
  2217 ;; This function calls:
  2218 ;;		_I2C_Master_Wait
  2219 ;; This function is called by:
  2220 ;;		_rtc_get_datetime
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224  01CB                     _I2C_Master_RepeatedStart:	
  2225                           ;psect for function _I2C_Master_RepeatedStart
  2226                           
  2227  01CB                     l1270:	
  2228                           ;incstack = 0
  2229                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2230                           
  2231                           
  2232                           ;click.c: 62: 
  2233  01CB  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  2234  01D0                     l1272:
  2235                           
  2236                           ;click.c: 63: void Lcd_Port(char a)
  2237  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2238  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  2239  01D2  1491               	bsf	17,1	;volatile
  2240  01D3                     l72:
  2241  01D3  0008               	return
  2242  01D4                     __end_of_I2C_Master_RepeatedStart:
  2243                           
  2244                           	psect	text11
  2245  02CC                     __ptext11:	
  2246 ;; *************** function _I2C_Master_Read *****************
  2247 ;; Defined at:
  2248 ;;		line 70 in file "click.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  ack             1    wreg     unsigned char 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  ack             1    1[COMMON] unsigned char 
  2253 ;;  temp            1    2[COMMON] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      unsigned char 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       0       0       0
  2264 ;;      Locals:         2       0       0       0       0
  2265 ;;      Temps:          1       0       0       0       0
  2266 ;;      Totals:         3       0       0       0       0
  2267 ;;Total ram usage:        3 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 1
  2270 ;; This function calls:
  2271 ;;		_I2C_Master_Wait
  2272 ;; This function is called by:
  2273 ;;		_rtc_get_datetime
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277  02CC                     _I2C_Master_Read:	
  2278                           ;psect for function _I2C_Master_Read
  2279                           
  2280                           
  2281                           ;incstack = 0
  2282                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2283                           ;I2C_Master_Read@ack stored from wreg
  2284  02CC  00F1               	movwf	I2C_Master_Read@ack
  2285  02CD                     l1278:
  2286                           
  2287                           ;click.c: 70: Lcd_Port(a);;click.c: 71: RD3 = 1;;click.c: 72: _delay((unsigned long)((4)
      +                          *(20000000/4000.0)));;click.c: 73: RD3 = 0;}
  2288  02CD  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  2289  02D2                     l1280:
  2290                           
  2291                           ;click.c: 74: void Lcd_Init()
  2292  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2293  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2294  02D4  1591               	bsf	17,3	;volatile
  2295                           
  2296                           ;click.c: 75: {Lcd_Port(0x00);
  2297  02D5  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  2298  02DA                     l1282:
  2299                           
  2300                           ;click.c: 76: _delay((unsigned long)((20)*(20000000/4000.0)));
  2301  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2302  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2303  02DC  0813               	movf	19,w	;volatile
  2304  02DD  00F0               	movwf	??_I2C_Master_Read
  2305  02DE  0870               	movf	??_I2C_Master_Read,w
  2306  02DF  00F2               	movwf	I2C_Master_Read@temp
  2307  02E0                     l1284:
  2308                           
  2309                           ;click.c: 77: Lcd_Cmd(0x03);
  2310  02E0  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Wait
  2311  02E5                     l1286:
  2312                           
  2313                           ;click.c: 78: _delay((unsigned long)((5)*(20000000/4000.0)));
  2314  02E5  0371               	decf	I2C_Master_Read@ack,w
  2315  02E6  1D03               	btfss	3,2
  2316  02E7  2AE9               	goto	u751
  2317  02E8  2AEA               	goto	u750
  2318  02E9                     u751:
  2319  02E9  2AEE               	goto	l78
  2320  02EA                     u750:
  2321  02EA                     l1288:
  2322  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2323  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2324  02EC  1291               	bcf	17,5	;volatile
  2325  02ED  2AF1               	goto	l79
  2326  02EE                     l78:	
  2327                           ;click.c: 79: Lcd_Cmd(0x03);
  2328                           
  2329  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2330  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2331  02F0  1691               	bsf	17,5	;volatile
  2332  02F1                     l79:
  2333                           
  2334                           ;click.c: 80: _delay((unsigned long)((11)*(20000000/4000.0)));
  2335  02F1  1611               	bsf	17,4	;volatile
  2336  02F2                     l1290:
  2337                           
  2338                           ;click.c: 81: Lcd_Cmd(0x03);
  2339  02F2  0872               	movf	I2C_Master_Read@temp,w
  2340  02F3                     l80:
  2341  02F3  0008               	return
  2342  02F4                     __end_of_I2C_Master_Read:
  2343                           
  2344                           	psect	text12
  2345  01FE                     __ptext12:	
  2346 ;; *************** function _I2C_Master_Wait *****************
  2347 ;; Defined at:
  2348 ;;		line 44 in file "click.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_I2C_Master_Start
  2372 ;;		_I2C_Master_Stop
  2373 ;;		_I2C_Master_RepeatedStart
  2374 ;;		_I2C_Master_Write
  2375 ;;		_I2C_Master_Read
  2376 ;;		_rtc_get_datetime
  2377 ;;		_rtc_set_datetime
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381  01FE                     _I2C_Master_Wait:	
  2382                           ;psect for function _I2C_Master_Wait
  2383                           
  2384  01FE                     l1230:	
  2385                           ;incstack = 0
  2386                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2387                           
  2388  01FE                     l60:	
  2389                           ;click.c: 46:     I2C_Master_Wait();
  2390                           
  2391  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2392  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2393  0200  1914               	btfsc	20,2	;volatile
  2394  0201  2A03               	goto	u661
  2395  0202  2A04               	goto	u660
  2396  0203                     u661:
  2397  0203  29FE               	goto	l60
  2398  0204                     u660:
  2399  0204                     l1232:
  2400  0204  0811               	movf	17,w	;volatile
  2401  0205  391F               	andlw	31
  2402  0206  1D03               	btfss	3,2
  2403  0207  2A09               	goto	u671
  2404  0208  2A0A               	goto	u670
  2405  0209                     u671:
  2406  0209  29FE               	goto	l60
  2407  020A                     u670:
  2408  020A                     l63:
  2409  020A  0008               	return
  2410  020B                     __end_of_I2C_Master_Wait:
  2411                           
  2412                           	psect	text13
  2413  0232                     __ptext13:	
  2414 ;; *************** function _BCD2Decimal *****************
  2415 ;; Defined at:
  2416 ;;		line 32 in file "click.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  num             1    wreg     unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  num             1    7[COMMON] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      unsigned char 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         1       0       0       0       0
  2432 ;;      Temps:          3       0       0       0       0
  2433 ;;      Totals:         4       0       0       0       0
  2434 ;;Total ram usage:        4 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 1
  2437 ;; This function calls:
  2438 ;;		___bmul
  2439 ;; This function is called by:
  2440 ;;		_rtc_get_datetime
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444  0232                     _BCD2Decimal:	
  2445                           ;psect for function _BCD2Decimal
  2446                           
  2447                           
  2448                           ;incstack = 0
  2449                           ; Regs used in _BCD2Decimal: [wreg+status,2+status,0+pclath+cstack]
  2450                           ;BCD2Decimal@num stored from wreg
  2451  0232  00F7               	movwf	BCD2Decimal@num
  2452  0233                     l1258:
  2453                           
  2454                           ;click.c: 32: ;click.c: 33: void I2C_Master_Stop();click.c: 34: {
  2455  0233  300F               	movlw	15
  2456  0234  0577               	andwf	BCD2Decimal@num,w
  2457  0235  00F4               	movwf	??_BCD2Decimal
  2458  0236  300A               	movlw	10
  2459  0237  00F5               	movwf	??_BCD2Decimal+1
  2460  0238  0875               	movf	??_BCD2Decimal+1,w
  2461  0239  00F0               	movwf	___bmul@multiplicand
  2462  023A  0877               	movf	BCD2Decimal@num,w
  2463  023B  00F6               	movwf	??_BCD2Decimal+2
  2464  023C  3004               	movlw	4
  2465  023D                     u745:
  2466  023D  1003               	clrc
  2467  023E  0CF6               	rrf	??_BCD2Decimal+2,f
  2468  023F  3EFF               	addlw	-1
  2469  0240  1D03               	skipz
  2470  0241  2A3D               	goto	u745
  2471  0242  0876               	movf	??_BCD2Decimal+2,w
  2472  0243  120A  118A  221D  120A  118A  	fcall	___bmul
  2473  0248  0774               	addwf	??_BCD2Decimal,w
  2474  0249                     l54:
  2475  0249  0008               	return
  2476  024A                     __end_of_BCD2Decimal:
  2477                           
  2478                           	psect	text14
  2479  021D                     __ptext14:	
  2480 ;; *************** function ___bmul *****************
  2481 ;; Defined at:
  2482 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  multiplier      1    wreg     unsigned char 
  2485 ;;  multiplicand    1    0[COMMON] unsigned char 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  multiplier      1    3[COMMON] unsigned char 
  2488 ;;  product         1    2[COMMON] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      unsigned char 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2498 ;;      Params:         1       0       0       0       0
  2499 ;;      Locals:         2       0       0       0       0
  2500 ;;      Temps:          1       0       0       0       0
  2501 ;;      Totals:         4       0       0       0       0
  2502 ;;Total ram usage:        4 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_BCD2Decimal
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511  021D                     ___bmul:	
  2512                           ;psect for function ___bmul
  2513                           
  2514                           
  2515                           ;incstack = 0
  2516                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2517                           ;___bmul@multiplier stored from wreg
  2518  021D  00F3               	movwf	___bmul@multiplier
  2519  021E                     l1244:
  2520  021E  01F2               	clrf	___bmul@product
  2521  021F                     l1246:
  2522  021F  1C73               	btfss	___bmul@multiplier,0
  2523  0220  2A22               	goto	u721
  2524  0221  2A23               	goto	u720
  2525  0222                     u721:
  2526  0222  2A27               	goto	l1250
  2527  0223                     u720:
  2528  0223                     l1248:
  2529  0223  0870               	movf	___bmul@multiplicand,w
  2530  0224  00F1               	movwf	??___bmul
  2531  0225  0871               	movf	??___bmul,w
  2532  0226  07F2               	addwf	___bmul@product,f
  2533  0227                     l1250:
  2534  0227  1003               	clrc
  2535  0228  0DF0               	rlf	___bmul@multiplicand,f
  2536  0229                     l1252:
  2537  0229  1003               	clrc
  2538  022A  0CF3               	rrf	___bmul@multiplier,f
  2539  022B  0873               	movf	___bmul@multiplier,w
  2540  022C  1D03               	btfss	3,2
  2541  022D  2A2F               	goto	u731
  2542  022E  2A30               	goto	u730
  2543  022F                     u731:
  2544  022F  2A1F               	goto	l1246
  2545  0230                     u730:
  2546  0230                     l1254:
  2547  0230  0872               	movf	___bmul@product,w
  2548  0231                     l287:
  2549  0231  0008               	return
  2550  0232                     __end_of___bmul:
  2551                           
  2552                           	psect	text15
  2553  0264                     __ptext15:	
  2554 ;; *************** function _Lcd_Write_String *****************
  2555 ;; Defined at:
  2556 ;;		line 136 in file "click.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  a               1    wreg     PTR unsigned char 
  2559 ;;		 -> main@b(10), main@a(10), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  a               1    8[COMMON] PTR unsigned char 
  2562 ;;		 -> main@b(10), main@a(10), 
  2563 ;;  i               2    6[COMMON] int 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         0       0       0       0       0
  2574 ;;      Locals:         3       0       0       0       0
  2575 ;;      Temps:          1       0       0       0       0
  2576 ;;      Totals:         4       0       0       0       0
  2577 ;;Total ram usage:        4 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 2
  2580 ;; This function calls:
  2581 ;;		_Lcd_Write_Char
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587  0264                     _Lcd_Write_String:	
  2588                           ;psect for function _Lcd_Write_String
  2589                           
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2593                           ;Lcd_Write_String@a stored from wreg
  2594  0264  00F8               	movwf	Lcd_Write_String@a
  2595  0265                     l1466:
  2596                           
  2597                           ;click.c: 137:   add->nam = BCD2Decimal(buff[6]);;click.c: 138:   add->gio = BCD2Decimal
      +                          (buff[2]);
  2598  0265  01F6               	clrf	Lcd_Write_String@i
  2599  0266  01F7               	clrf	Lcd_Write_String@i+1
  2600  0267  2A79               	goto	l1472
  2601  0268                     l1468:
  2602  0268  0876               	movf	Lcd_Write_String@i,w
  2603  0269  0778               	addwf	Lcd_Write_String@a,w
  2604  026A  00F5               	movwf	??_Lcd_Write_String
  2605  026B  0875               	movf	??_Lcd_Write_String,w
  2606  026C  0084               	movwf	4
  2607  026D  0800               	movf	0,w
  2608  026E  120A  118A  232C  120A  118A  	fcall	_Lcd_Write_Char
  2609  0273                     l1470:
  2610  0273  3001               	movlw	1
  2611  0274  07F6               	addwf	Lcd_Write_String@i,f
  2612  0275  1803               	skipnc
  2613  0276  0AF7               	incf	Lcd_Write_String@i+1,f
  2614  0277  3000               	movlw	0
  2615  0278  07F7               	addwf	Lcd_Write_String@i+1,f
  2616  0279                     l1472:
  2617  0279  0876               	movf	Lcd_Write_String@i,w
  2618  027A  0778               	addwf	Lcd_Write_String@a,w
  2619  027B  00F5               	movwf	??_Lcd_Write_String
  2620  027C  0875               	movf	??_Lcd_Write_String,w
  2621  027D  0084               	movwf	4
  2622  027E  1383               	bcf	3,7	;select IRP bank0
  2623  027F  0800               	movf	0,w
  2624  0280  1D03               	btfss	3,2
  2625  0281  2A83               	goto	u1081
  2626  0282  2A84               	goto	u1080
  2627  0283                     u1081:
  2628  0283  2A68               	goto	l1468
  2629  0284                     u1080:
  2630  0284                     l115:
  2631  0284  0008               	return
  2632  0285                     __end_of_Lcd_Write_String:
  2633                           
  2634                           	psect	text16
  2635  032C                     __ptext16:	
  2636 ;; *************** function _Lcd_Write_Char *****************
  2637 ;; Defined at:
  2638 ;;		line 129 in file "click.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  a               1    wreg     unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  a               1    4[COMMON] unsigned char 
  2643 ;;  y               1    3[COMMON] unsigned char 
  2644 ;;  temp            1    2[COMMON] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       0       0       0
  2655 ;;      Locals:         3       0       0       0       0
  2656 ;;      Temps:          1       0       0       0       0
  2657 ;;      Totals:         4       0       0       0       0
  2658 ;;Total ram usage:        4 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 1
  2661 ;; This function calls:
  2662 ;;		_Lcd_Port
  2663 ;; This function is called by:
  2664 ;;		_Lcd_Write_String
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668  032C                     _Lcd_Write_Char:	
  2669                           ;psect for function _Lcd_Write_Char
  2670                           
  2671                           
  2672                           ;incstack = 0
  2673                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2674                           ;Lcd_Write_Char@a stored from wreg
  2675  032C  00F4               	movwf	Lcd_Write_Char@a
  2676  032D                     l1304:
  2677                           
  2678                           ;click.c: 130:   {;click.c: 131:      buff[i]=I2C_Master_Read(1);
  2679  032D  0874               	movf	Lcd_Write_Char@a,w
  2680  032E  390F               	andlw	15
  2681  032F  00F1               	movwf	??_Lcd_Write_Char
  2682  0330  0871               	movf	??_Lcd_Write_Char,w
  2683  0331  00F2               	movwf	Lcd_Write_Char@temp
  2684  0332  0874               	movf	Lcd_Write_Char@a,w
  2685  0333  39F0               	andlw	240
  2686  0334  00F1               	movwf	??_Lcd_Write_Char
  2687  0335  0871               	movf	??_Lcd_Write_Char,w
  2688  0336  00F3               	movwf	Lcd_Write_Char@y
  2689  0337                     l1306:
  2690  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0339  1508               	bsf	8,2	;volatile
  2693  033A                     l1308:
  2694                           
  2695                           ;click.c: 132:   }
  2696  033A  0873               	movf	Lcd_Write_Char@y,w
  2697  033B  00F1               	movwf	??_Lcd_Write_Char
  2698  033C  3004               	movlw	4
  2699  033D                     u765:
  2700  033D  1003               	clrc
  2701  033E  0CF1               	rrf	??_Lcd_Write_Char,f
  2702  033F  3EFF               	addlw	-1
  2703  0340  1D03               	skipz
  2704  0341  2B3D               	goto	u765
  2705  0342  0871               	movf	??_Lcd_Write_Char,w
  2706  0343  120A  118A  2285  120A  118A  	fcall	_Lcd_Port
  2707  0348                     l1310:
  2708                           
  2709                           ;click.c: 133:   buff[7] = I2C_Master_Read(0);
  2710  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2712  034A  1588               	bsf	8,3	;volatile
  2713  034B                     l1312:
  2714  034B  3042               	movlw	66
  2715  034C  00F1               	movwf	??_Lcd_Write_Char
  2716  034D                     u1327:
  2717  034D  0BF1               	decfsz	??_Lcd_Write_Char,f
  2718  034E  2B4D               	goto	u1327
  2719  034F  0000               	nop
  2720  0350                     l1314:
  2721  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0352  1188               	bcf	8,3	;volatile
  2724  0353                     l1316:
  2725                           
  2726                           ;click.c: 134:   I2C_Master_Stop();
  2727  0353  0872               	movf	Lcd_Write_Char@temp,w
  2728  0354  120A  118A  2285  120A  118A  	fcall	_Lcd_Port
  2729  0359                     l1318:
  2730  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2731  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2732  035B  1588               	bsf	8,3	;volatile
  2733  035C                     l1320:
  2734                           
  2735                           ;click.c: 135:   add->ngay= BCD2Decimal(buff[4]);
  2736  035C  3042               	movlw	66
  2737  035D  00F1               	movwf	??_Lcd_Write_Char
  2738  035E                     u1337:
  2739  035E  0BF1               	decfsz	??_Lcd_Write_Char,f
  2740  035F  2B5E               	goto	u1337
  2741  0360  0000               	nop
  2742  0361                     l1322:
  2743  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0363  1188               	bcf	8,3	;volatile
  2746  0364                     l109:
  2747  0364  0008               	return
  2748  0365                     __end_of_Lcd_Write_Char:
  2749                           
  2750                           	psect	text17
  2751  03E3                     __ptext17:	
  2752 ;; *************** function _Lcd_Set_Cursor *****************
  2753 ;; Defined at:
  2754 ;;		line 114 in file "click.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  a               1    wreg     unsigned char 
  2757 ;;  b               1    4[COMMON] unsigned char 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  a               1    7[COMMON] unsigned char 
  2760 ;;  temp            1   10[COMMON] unsigned char 
  2761 ;;  y               1    9[COMMON] unsigned char 
  2762 ;;  z               1    8[COMMON] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         1       0       0       0       0
  2773 ;;      Locals:         4       0       0       0       0
  2774 ;;      Temps:          2       0       0       0       0
  2775 ;;      Totals:         7       0       0       0       0
  2776 ;;Total ram usage:        7 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 2
  2779 ;; This function calls:
  2780 ;;		_Lcd_Cmd
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786  03E3                     _Lcd_Set_Cursor:	
  2787                           ;psect for function _Lcd_Set_Cursor
  2788                           
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2792                           ;Lcd_Set_Cursor@a stored from wreg
  2793  03E3  00F7               	movwf	Lcd_Set_Cursor@a
  2794  03E4                     l1446:
  2795                           
  2796                           ;click.c: 114:     _delay((unsigned long)((40)*(20000000/4000000.0)));RD3 = 0;};click.c:
      +                           115: void Lcd_Write_String(char *a){;click.c: 116:     int i;
  2797  03E4  0377               	decf	Lcd_Set_Cursor@a,w
  2798  03E5  1D03               	btfss	3,2
  2799  03E6  2BE8               	goto	u1041
  2800  03E7  2BE9               	goto	u1040
  2801  03E8                     u1041:
  2802  03E8  2C0C               	goto	l1456
  2803  03E9                     u1040:
  2804  03E9                     l1448:
  2805                           
  2806                           ;click.c: 117:     for(i=0;a[i]!='\0';i++)Lcd_Write_Char(a[i]);}
  2807  03E9  0874               	movf	Lcd_Set_Cursor@b,w
  2808  03EA  3E7F               	addlw	127
  2809  03EB  00F5               	movwf	??_Lcd_Set_Cursor
  2810  03EC  0875               	movf	??_Lcd_Set_Cursor,w
  2811  03ED  00FA               	movwf	Lcd_Set_Cursor@temp
  2812                           
  2813                           ;click.c: 118: 
  2814  03EE  087A               	movf	Lcd_Set_Cursor@temp,w
  2815  03EF  00F5               	movwf	??_Lcd_Set_Cursor
  2816  03F0  3004               	movlw	4
  2817  03F1                     u1055:
  2818  03F1  1003               	clrc
  2819  03F2  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2820  03F3  3EFF               	addlw	-1
  2821  03F4  1D03               	skipz
  2822  03F5  2BF1               	goto	u1055
  2823  03F6  0875               	movf	??_Lcd_Set_Cursor,w
  2824  03F7  00F6               	movwf	??_Lcd_Set_Cursor+1
  2825  03F8  0876               	movf	??_Lcd_Set_Cursor+1,w
  2826  03F9  00F8               	movwf	Lcd_Set_Cursor@z
  2827  03FA                     l1450:
  2828                           
  2829                           ;click.c: 119: void rtc_get_datetime(datetime* add)
  2830  03FA  087A               	movf	Lcd_Set_Cursor@temp,w
  2831  03FB  390F               	andlw	15
  2832  03FC  00F5               	movwf	??_Lcd_Set_Cursor
  2833  03FD  0875               	movf	??_Lcd_Set_Cursor,w
  2834  03FE  00F9               	movwf	Lcd_Set_Cursor@y
  2835  03FF                     l1452:
  2836                           
  2837                           ;click.c: 120: {
  2838  03FF  0878               	movf	Lcd_Set_Cursor@z,w
  2839  0400  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  2840  0405                     l1454:
  2841                           
  2842                           ;click.c: 121:   uint8_t buff[8];
  2843  0405  0879               	movf	Lcd_Set_Cursor@y,w
  2844  0406  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  2845                           
  2846                           ;click.c: 122:   I2C_Master_Start();
  2847  040B  2C34               	goto	l106
  2848  040C                     l1456:
  2849  040C  3002               	movlw	2
  2850  040D  0677               	xorwf	Lcd_Set_Cursor@a,w
  2851  040E  1D03               	btfss	3,2
  2852  040F  2C11               	goto	u1061
  2853  0410  2C12               	goto	u1060
  2854  0411                     u1061:
  2855  0411  2C34               	goto	l106
  2856  0412                     u1060:
  2857  0412                     l1458:
  2858                           
  2859                           ;click.c: 124:   I2C_Master_Write(0x00);
  2860  0412  0874               	movf	Lcd_Set_Cursor@b,w
  2861  0413  3EBF               	addlw	191
  2862  0414  00F5               	movwf	??_Lcd_Set_Cursor
  2863  0415  0875               	movf	??_Lcd_Set_Cursor,w
  2864  0416  00FA               	movwf	Lcd_Set_Cursor@temp
  2865                           
  2866                           ;click.c: 125:   I2C_Master_Wait();
  2867  0417  087A               	movf	Lcd_Set_Cursor@temp,w
  2868  0418  00F5               	movwf	??_Lcd_Set_Cursor
  2869  0419  3004               	movlw	4
  2870  041A                     u1075:
  2871  041A  1003               	clrc
  2872  041B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2873  041C  3EFF               	addlw	-1
  2874  041D  1D03               	skipz
  2875  041E  2C1A               	goto	u1075
  2876  041F  0875               	movf	??_Lcd_Set_Cursor,w
  2877  0420  00F6               	movwf	??_Lcd_Set_Cursor+1
  2878  0421  0876               	movf	??_Lcd_Set_Cursor+1,w
  2879  0422  00F8               	movwf	Lcd_Set_Cursor@z
  2880  0423                     l1460:
  2881                           
  2882                           ;click.c: 126:   I2C_Master_RepeatedStart();
  2883  0423  087A               	movf	Lcd_Set_Cursor@temp,w
  2884  0424  390F               	andlw	15
  2885  0425  00F5               	movwf	??_Lcd_Set_Cursor
  2886  0426  0875               	movf	??_Lcd_Set_Cursor,w
  2887  0427  00F9               	movwf	Lcd_Set_Cursor@y
  2888  0428                     l1462:
  2889                           
  2890                           ;click.c: 127:   I2C_Master_Write(0xD1);
  2891  0428  0878               	movf	Lcd_Set_Cursor@z,w
  2892  0429  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  2893  042E                     l1464:
  2894                           
  2895                           ;click.c: 128:   I2C_Master_Wait();
  2896  042E  0879               	movf	Lcd_Set_Cursor@y,w
  2897  042F  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  2898  0434                     l106:
  2899  0434  0008               	return
  2900  0435                     __end_of_Lcd_Set_Cursor:
  2901                           
  2902                           	psect	text18
  2903  0435                     __ptext18:	
  2904 ;; *************** function _Lcd_Init *****************
  2905 ;; Defined at:
  2906 ;;		line 95 in file "click.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0
  2922 ;;      Temps:          2       0       0       0       0
  2923 ;;      Totals:         2       0       0       0       0
  2924 ;;Total ram usage:        2 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 2
  2927 ;; This function calls:
  2928 ;;		_Lcd_Cmd
  2929 ;;		_Lcd_Port
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935  0435                     _Lcd_Init:	
  2936                           ;psect for function _Lcd_Init
  2937                           
  2938  0435                     l1434:	
  2939                           ;incstack = 0
  2940                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2941                           
  2942  0435  3000               	movlw	0
  2943  0436  120A  118A  2285  120A  118A  	fcall	_Lcd_Port
  2944  043B                     l1436:
  2945                           
  2946                           ;click.c: 97: z = temp>>4;
  2947  043B  3082               	movlw	130
  2948  043C  00F5               	movwf	??_Lcd_Init+1
  2949  043D  30DD               	movlw	221
  2950  043E  00F4               	movwf	??_Lcd_Init
  2951  043F                     u1347:
  2952  043F  0BF4               	decfsz	??_Lcd_Init,f
  2953  0440  2C3F               	goto	u1347
  2954  0441  0BF5               	decfsz	??_Lcd_Init+1,f
  2955  0442  2C3F               	goto	u1347
  2956  0443  2C44               	nop2
  2957  0444                     l1438:
  2958                           
  2959                           ;click.c: 98: y = temp & 0x0F;
  2960  0444  3003               	movlw	3
  2961  0445  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  2962                           
  2963                           ;click.c: 99: Lcd_Cmd(z);
  2964  044A  3021               	movlw	33
  2965  044B  00F5               	movwf	??_Lcd_Init+1
  2966  044C  3076               	movlw	118
  2967  044D  00F4               	movwf	??_Lcd_Init
  2968  044E                     u1357:
  2969  044E  0BF4               	decfsz	??_Lcd_Init,f
  2970  044F  2C4E               	goto	u1357
  2971  0450  0BF5               	decfsz	??_Lcd_Init+1,f
  2972  0451  2C4E               	goto	u1357
  2973  0452  0000               	nop
  2974  0453                     l1440:
  2975                           
  2976                           ;click.c: 100: Lcd_Cmd(y);
  2977  0453  3003               	movlw	3
  2978  0454  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  2979  0459                     l1442:
  2980                           
  2981                           ;click.c: 101: }
  2982  0459  3048               	movlw	72
  2983  045A  00F5               	movwf	??_Lcd_Init+1
  2984  045B  306C               	movlw	108
  2985  045C  00F4               	movwf	??_Lcd_Init
  2986  045D                     u1367:
  2987  045D  0BF4               	decfsz	??_Lcd_Init,f
  2988  045E  2C5D               	goto	u1367
  2989  045F  0BF5               	decfsz	??_Lcd_Init+1,f
  2990  0460  2C5D               	goto	u1367
  2991  0461  0000               	nop
  2992                           
  2993                           ;click.c: 102: else if(a == 2)
  2994  0462  3003               	movlw	3
  2995  0463  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  2996                           
  2997                           ;click.c: 103: {temp = 0xC0 + b -1;
  2998  0468  3002               	movlw	2
  2999  0469  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3000                           
  3001                           ;click.c: 104: z = temp>>4;
  3002  046E  3002               	movlw	2
  3003  046F  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3004                           
  3005                           ;click.c: 105: y = temp & 0x0F;
  3006  0474  3008               	movlw	8
  3007  0475  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3008                           
  3009                           ;click.c: 106: Lcd_Cmd(z);
  3010  047A  3000               	movlw	0
  3011  047B  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3012                           
  3013                           ;click.c: 107: Lcd_Cmd(y);}}
  3014  0480  300C               	movlw	12
  3015  0481  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3016                           
  3017                           ;click.c: 108:  void Lcd_Write_Char(char a){
  3018  0486  3000               	movlw	0
  3019  0487  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3020                           
  3021                           ;click.c: 109:     char temp,y;
  3022  048C  3006               	movlw	6
  3023  048D  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3024  0492                     l97:
  3025  0492  0008               	return
  3026  0493                     __end_of_Lcd_Init:
  3027                           
  3028                           	psect	text19
  3029  01F1                     __ptext19:	
  3030 ;; *************** function _Lcd_Clear *****************
  3031 ;; Defined at:
  3032 ;;		line 110 in file "click.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0, pclath, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0
  3049 ;;      Totals:         0       0       0       0       0
  3050 ;;Total ram usage:        0 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; Hardware stack levels required when called: 2
  3053 ;; This function calls:
  3054 ;;		_Lcd_Cmd
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060  01F1                     _Lcd_Clear:	
  3061                           ;psect for function _Lcd_Clear
  3062                           
  3063  01F1                     l1444:	
  3064                           ;incstack = 0
  3065                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3066                           
  3067                           
  3068                           ;click.c: 111:     Lcd_Port(y>>4);
  3069  01F1  3000               	movlw	0
  3070  01F2  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3071                           
  3072                           ;click.c: 112:     RD3 = 1;_delay((unsigned long)((40)*(20000000/4000000.0)));RD3 = 0;
  3073  01F7  3001               	movlw	1
  3074  01F8  120A  118A  224A  120A  118A  	fcall	_Lcd_Cmd
  3075  01FD                     l100:
  3076  01FD  0008               	return
  3077  01FE                     __end_of_Lcd_Clear:
  3078                           
  3079                           	psect	text20
  3080  024A                     __ptext20:	
  3081 ;; *************** function _Lcd_Cmd *****************
  3082 ;; Defined at:
  3083 ;;		line 89 in file "click.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  a               1    wreg     unsigned char 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  a               1    3[COMMON] unsigned char 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3097 ;;      Params:         0       0       0       0       0
  3098 ;;      Locals:         1       0       0       0       0
  3099 ;;      Temps:          2       0       0       0       0
  3100 ;;      Totals:         3       0       0       0       0
  3101 ;;Total ram usage:        3 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 1
  3104 ;; This function calls:
  3105 ;;		_Lcd_Port
  3106 ;; This function is called by:
  3107 ;;		_Lcd_Init
  3108 ;;		_Lcd_Clear
  3109 ;;		_Lcd_Set_Cursor
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113  024A                     _Lcd_Cmd:	
  3114                           ;psect for function _Lcd_Cmd
  3115                           
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3119                           ;Lcd_Cmd@a stored from wreg
  3120  024A  00F3               	movwf	Lcd_Cmd@a
  3121  024B                     l1294:
  3122                           
  3123                           ;click.c: 89: void Lcd_Clear(){;click.c: 90:     Lcd_Cmd(0);
  3124  024B  1283               	bcf	3,5	;RP0=0, select bank0
  3125  024C  1303               	bcf	3,6	;RP1=0, select bank0
  3126  024D  1108               	bcf	8,2	;volatile
  3127  024E                     l1296:
  3128                           
  3129                           ;click.c: 91:     Lcd_Cmd(1);
  3130  024E  0873               	movf	Lcd_Cmd@a,w
  3131  024F  120A  118A  2285  120A  118A  	fcall	_Lcd_Port
  3132  0254                     l1298:
  3133                           
  3134                           ;click.c: 92: }
  3135  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0256  1588               	bsf	8,3	;volatile
  3138  0257                     l1300:
  3139                           
  3140                           ;click.c: 93: void Lcd_Set_Cursor(char a, char b)
  3141  0257  301A               	movlw	26
  3142  0258  00F2               	movwf	??_Lcd_Cmd+1
  3143  0259  30F8               	movlw	248
  3144  025A  00F1               	movwf	??_Lcd_Cmd
  3145  025B                     u1377:
  3146  025B  0BF1               	decfsz	??_Lcd_Cmd,f
  3147  025C  2A5B               	goto	u1377
  3148  025D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3149  025E  2A5B               	goto	u1377
  3150  025F  0000               	nop
  3151  0260                     l1302:
  3152                           
  3153                           ;click.c: 94: {char temp,z,y;
  3154  0260  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0261  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0262  1188               	bcf	8,3	;volatile
  3157  0263                     l94:
  3158  0263  0008               	return
  3159  0264                     __end_of_Lcd_Cmd:
  3160                           
  3161                           	psect	text21
  3162  0285                     __ptext21:	
  3163 ;; *************** function _Lcd_Port *****************
  3164 ;; Defined at:
  3165 ;;		line 84 in file "click.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  a               1    wreg     unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  a               1    0[COMMON] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         0       0       0       0       0
  3180 ;;      Locals:         1       0       0       0       0
  3181 ;;      Temps:          0       0       0       0       0
  3182 ;;      Totals:         1       0       0       0       0
  3183 ;;Total ram usage:        1 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_Lcd_Cmd
  3189 ;;		_Lcd_Init
  3190 ;;		_Lcd_Write_Char
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194  0285                     _Lcd_Port:	
  3195                           ;psect for function _Lcd_Port
  3196                           
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _Lcd_Port: [wreg]
  3200                           ;Lcd_Port@a stored from wreg
  3201  0285  00F0               	movwf	Lcd_Port@a
  3202  0286                     l1234:
  3203                           
  3204                           ;click.c: 84: Lcd_Cmd(0x08);;click.c: 85: Lcd_Cmd(0x00);
  3205  0286  1C70               	btfss	Lcd_Port@a,0
  3206  0287  2A89               	goto	u681
  3207  0288  2A8A               	goto	u680
  3208  0289                     u681:
  3209  0289  2A8E               	goto	l83
  3210  028A                     u680:
  3211  028A                     l1236:
  3212  028A  1283               	bcf	3,5	;RP0=0, select bank0
  3213  028B  1303               	bcf	3,6	;RP1=0, select bank0
  3214  028C  1608               	bsf	8,4	;volatile
  3215  028D  2A91               	goto	l84
  3216  028E                     l83:
  3217  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3218  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0290  1208               	bcf	8,4	;volatile
  3220  0291                     l84:
  3221                           
  3222                           ;click.c: 86: Lcd_Cmd(0x0C);
  3223  0291  1CF0               	btfss	Lcd_Port@a,1
  3224  0292  2A94               	goto	u691
  3225  0293  2A95               	goto	u690
  3226  0294                     u691:
  3227  0294  2A97               	goto	l85
  3228  0295                     u690:
  3229  0295                     l1238:
  3230  0295  1688               	bsf	8,5	;volatile
  3231  0296  2A98               	goto	l86
  3232  0297                     l85:
  3233  0297  1288               	bcf	8,5	;volatile
  3234  0298                     l86:
  3235                           
  3236                           ;click.c: 87: Lcd_Cmd(0x00);
  3237  0298  1D70               	btfss	Lcd_Port@a,2
  3238  0299  2A9B               	goto	u701
  3239  029A  2A9C               	goto	u700
  3240  029B                     u701:
  3241  029B  2A9E               	goto	l87
  3242  029C                     u700:
  3243  029C                     l1240:
  3244  029C  1708               	bsf	8,6	;volatile
  3245  029D  2A9F               	goto	l88
  3246  029E                     l87:
  3247  029E  1308               	bcf	8,6	;volatile
  3248  029F                     l88:
  3249                           
  3250                           ;click.c: 88: Lcd_Cmd(0x06);}
  3251  029F  1DF0               	btfss	Lcd_Port@a,3
  3252  02A0  2AA2               	goto	u711
  3253  02A1  2AA3               	goto	u710
  3254  02A2                     u711:
  3255  02A2  2AA5               	goto	l89
  3256  02A3                     u710:
  3257  02A3                     l1242:
  3258  02A3  1788               	bsf	8,7	;volatile
  3259  02A4  2AA6               	goto	l91
  3260  02A5                     l89:
  3261  02A5  1388               	bcf	8,7	;volatile
  3262  02A6                     l91:
  3263  02A6  0008               	return
  3264  02A7                     __end_of_Lcd_Port:
  3265                           
  3266                           	psect	text22
  3267  02F4                     __ptext22:	
  3268 ;; *************** function _I2C_Master_Init *****************
  3269 ;; Defined at:
  3270 ;;		line 36 in file "click.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  clock           4    0[BANK0 ] unsigned long 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       4       0       0       0
  3285 ;;      Locals:         0       0       0       0       0
  3286 ;;      Temps:          0       4       0       0       0
  3287 ;;      Totals:         0       8       0       0       0
  3288 ;;Total ram usage:        8 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 1
  3291 ;; This function calls:
  3292 ;;		___lldiv
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298  02F4                     _I2C_Master_Init:	
  3299                           ;psect for function _I2C_Master_Init
  3300                           
  3301  02F4                     l1422:	
  3302                           ;incstack = 0
  3303                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3304                           
  3305                           
  3306                           ;click.c: 36:     PEN = 1;;click.c: 37: };click.c: 38: 
  3307  02F4  3028               	movlw	40
  3308  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  3309  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  3310  02F7  0094               	movwf	20	;volatile
  3311  02F8                     l1424:
  3312                           
  3313                           ;click.c: 39: void I2C_Master_RepeatedStart()
  3314  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  3315  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  3316  02FA  0191               	clrf	17	;volatile
  3317  02FB                     l1426:
  3318                           
  3319                           ;click.c: 40: {
  3320  02FB  0194               	clrf	20	;volatile
  3321  02FC                     l1428:
  3322                           
  3323                           ;click.c: 41:     I2C_Master_Wait();
  3324  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3325  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3326  02FE  0820               	movf	I2C_Master_Init@clock,w
  3327  02FF  00A4               	movwf	??_I2C_Master_Init
  3328  0300  0821               	movf	I2C_Master_Init@clock+1,w
  3329  0301  00A5               	movwf	??_I2C_Master_Init+1
  3330  0302  0822               	movf	I2C_Master_Init@clock+2,w
  3331  0303  00A6               	movwf	??_I2C_Master_Init+2
  3332  0304  0823               	movf	I2C_Master_Init@clock+3,w
  3333  0305  00A7               	movwf	??_I2C_Master_Init+3
  3334  0306  3002               	movlw	2
  3335  0307                     u1035:
  3336  0307  1003               	clrc
  3337  0308  0DA4               	rlf	??_I2C_Master_Init,f
  3338  0309  0DA5               	rlf	??_I2C_Master_Init+1,f
  3339  030A  0DA6               	rlf	??_I2C_Master_Init+2,f
  3340  030B  0DA7               	rlf	??_I2C_Master_Init+3,f
  3341  030C                     u1030:
  3342  030C  3EFF               	addlw	-1
  3343  030D  1D03               	skipz
  3344  030E  2B07               	goto	u1035
  3345  030F  0827               	movf	??_I2C_Master_Init+3,w
  3346  0310  00F3               	movwf	___lldiv@divisor+3
  3347  0311  0826               	movf	??_I2C_Master_Init+2,w
  3348  0312  00F2               	movwf	___lldiv@divisor+2
  3349  0313  0825               	movf	??_I2C_Master_Init+1,w
  3350  0314  00F1               	movwf	___lldiv@divisor+1
  3351  0315  0824               	movf	??_I2C_Master_Init,w
  3352  0316  00F0               	movwf	___lldiv@divisor
  3353  0317  3001               	movlw	1
  3354  0318  00F7               	movwf	___lldiv@dividend+3
  3355  0319  3031               	movlw	49
  3356  031A  00F6               	movwf	___lldiv@dividend+2
  3357  031B  302D               	movlw	45
  3358  031C  00F5               	movwf	___lldiv@dividend+1
  3359  031D  3000               	movlw	0
  3360  031E  00F4               	movwf	___lldiv@dividend
  3361  031F  120A  118A  2493  120A  118A  	fcall	___lldiv
  3362  0324  0870               	movf	?___lldiv,w
  3363  0325  3EFF               	addlw	255
  3364  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3365  0327  1303               	bcf	3,6	;RP1=0, select bank1
  3366  0328  0093               	movwf	19	;volatile
  3367  0329                     l1430:
  3368                           
  3369                           ;click.c: 42:     RSEN = 1;
  3370  0329  1587               	bsf	7,3	;volatile
  3371  032A                     l1432:
  3372                           
  3373                           ;click.c: 43: }
  3374  032A  1607               	bsf	7,4	;volatile
  3375  032B                     l57:
  3376  032B  0008               	return
  3377  032C                     __end_of_I2C_Master_Init:
  3378                           
  3379                           	psect	text23
  3380  0493                     __ptext23:	
  3381 ;; *************** function ___lldiv *****************
  3382 ;; Defined at:
  3383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  divisor         4    0[COMMON] unsigned long 
  3386 ;;  dividend        4    4[COMMON] unsigned long 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  quotient        4    9[COMMON] unsigned long 
  3389 ;;  counter         1   13[COMMON] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  4    0[COMMON] unsigned long 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3399 ;;      Params:         8       0       0       0       0
  3400 ;;      Locals:         5       0       0       0       0
  3401 ;;      Temps:          1       0       0       0       0
  3402 ;;      Totals:        14       0       0       0       0
  3403 ;;Total ram usage:       14 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_I2C_Master_Init
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412  0493                     ___lldiv:	
  3413                           ;psect for function ___lldiv
  3414                           
  3415  0493                     l1350:	
  3416                           ;incstack = 0
  3417                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3418                           
  3419  0493  3000               	movlw	0
  3420  0494  00FC               	movwf	___lldiv@quotient+3
  3421  0495  3000               	movlw	0
  3422  0496  00FB               	movwf	___lldiv@quotient+2
  3423  0497  3000               	movlw	0
  3424  0498  00FA               	movwf	___lldiv@quotient+1
  3425  0499  3000               	movlw	0
  3426  049A  00F9               	movwf	___lldiv@quotient
  3427  049B  0873               	movf	___lldiv@divisor+3,w
  3428  049C  0472               	iorwf	___lldiv@divisor+2,w
  3429  049D  0471               	iorwf	___lldiv@divisor+1,w
  3430  049E  0470               	iorwf	___lldiv@divisor,w
  3431  049F  1903               	skipnz
  3432  04A0  2CA2               	goto	u831
  3433  04A1  2CA3               	goto	u830
  3434  04A2                     u831:
  3435  04A2  2CF0               	goto	l1370
  3436  04A3                     u830:
  3437  04A3                     l1352:
  3438  04A3  01FD               	clrf	___lldiv@counter
  3439  04A4  0AFD               	incf	___lldiv@counter,f
  3440  04A5  2CB3               	goto	l1356
  3441  04A6                     l1354:
  3442  04A6  3001               	movlw	1
  3443  04A7  00F8               	movwf	??___lldiv
  3444  04A8                     u845:
  3445  04A8  1003               	clrc
  3446  04A9  0DF0               	rlf	___lldiv@divisor,f
  3447  04AA  0DF1               	rlf	___lldiv@divisor+1,f
  3448  04AB  0DF2               	rlf	___lldiv@divisor+2,f
  3449  04AC  0DF3               	rlf	___lldiv@divisor+3,f
  3450  04AD  0BF8               	decfsz	??___lldiv,f
  3451  04AE  2CA8               	goto	u845
  3452  04AF  3001               	movlw	1
  3453  04B0  00F8               	movwf	??___lldiv
  3454  04B1  0878               	movf	??___lldiv,w
  3455  04B2  07FD               	addwf	___lldiv@counter,f
  3456  04B3                     l1356:
  3457  04B3  1FF3               	btfss	___lldiv@divisor+3,7
  3458  04B4  2CB6               	goto	u851
  3459  04B5  2CB7               	goto	u850
  3460  04B6                     u851:
  3461  04B6  2CA6               	goto	l1354
  3462  04B7                     u850:
  3463  04B7                     l1358:
  3464  04B7  3001               	movlw	1
  3465  04B8  00F8               	movwf	??___lldiv
  3466  04B9                     u865:
  3467  04B9  1003               	clrc
  3468  04BA  0DF9               	rlf	___lldiv@quotient,f
  3469  04BB  0DFA               	rlf	___lldiv@quotient+1,f
  3470  04BC  0DFB               	rlf	___lldiv@quotient+2,f
  3471  04BD  0DFC               	rlf	___lldiv@quotient+3,f
  3472  04BE  0BF8               	decfsz	??___lldiv,f
  3473  04BF  2CB9               	goto	u865
  3474  04C0                     l1360:
  3475  04C0  0873               	movf	___lldiv@divisor+3,w
  3476  04C1  0277               	subwf	___lldiv@dividend+3,w
  3477  04C2  1D03               	skipz
  3478  04C3  2CCE               	goto	u875
  3479  04C4  0872               	movf	___lldiv@divisor+2,w
  3480  04C5  0276               	subwf	___lldiv@dividend+2,w
  3481  04C6  1D03               	skipz
  3482  04C7  2CCE               	goto	u875
  3483  04C8  0871               	movf	___lldiv@divisor+1,w
  3484  04C9  0275               	subwf	___lldiv@dividend+1,w
  3485  04CA  1D03               	skipz
  3486  04CB  2CCE               	goto	u875
  3487  04CC  0870               	movf	___lldiv@divisor,w
  3488  04CD  0274               	subwf	___lldiv@dividend,w
  3489  04CE                     u875:
  3490  04CE  1C03               	skipc
  3491  04CF  2CD1               	goto	u871
  3492  04D0  2CD2               	goto	u870
  3493  04D1                     u871:
  3494  04D1  2CE1               	goto	l1366
  3495  04D2                     u870:
  3496  04D2                     l1362:
  3497  04D2  0870               	movf	___lldiv@divisor,w
  3498  04D3  02F4               	subwf	___lldiv@dividend,f
  3499  04D4  0871               	movf	___lldiv@divisor+1,w
  3500  04D5  1C03               	skipc
  3501  04D6  0F71               	incfsz	___lldiv@divisor+1,w
  3502  04D7  02F5               	subwf	___lldiv@dividend+1,f
  3503  04D8  0872               	movf	___lldiv@divisor+2,w
  3504  04D9  1C03               	skipc
  3505  04DA  0F72               	incfsz	___lldiv@divisor+2,w
  3506  04DB  02F6               	subwf	___lldiv@dividend+2,f
  3507  04DC  0873               	movf	___lldiv@divisor+3,w
  3508  04DD  1C03               	skipc
  3509  04DE  0F73               	incfsz	___lldiv@divisor+3,w
  3510  04DF  02F7               	subwf	___lldiv@dividend+3,f
  3511  04E0                     l1364:
  3512  04E0  1479               	bsf	___lldiv@quotient,0
  3513  04E1                     l1366:
  3514  04E1  3001               	movlw	1
  3515  04E2                     u885:
  3516  04E2  1003               	clrc
  3517  04E3  0CF3               	rrf	___lldiv@divisor+3,f
  3518  04E4  0CF2               	rrf	___lldiv@divisor+2,f
  3519  04E5  0CF1               	rrf	___lldiv@divisor+1,f
  3520  04E6  0CF0               	rrf	___lldiv@divisor,f
  3521  04E7  3EFF               	addlw	-1
  3522  04E8  1D03               	skipz
  3523  04E9  2CE2               	goto	u885
  3524  04EA                     l1368:
  3525  04EA  3001               	movlw	1
  3526  04EB  02FD               	subwf	___lldiv@counter,f
  3527  04EC  1D03               	btfss	3,2
  3528  04ED  2CEF               	goto	u891
  3529  04EE  2CF0               	goto	u890
  3530  04EF                     u891:
  3531  04EF  2CB7               	goto	l1358
  3532  04F0                     u890:
  3533  04F0                     l1370:
  3534  04F0  087C               	movf	___lldiv@quotient+3,w
  3535  04F1  00F3               	movwf	?___lldiv+3
  3536  04F2  087B               	movf	___lldiv@quotient+2,w
  3537  04F3  00F2               	movwf	?___lldiv+2
  3538  04F4  087A               	movf	___lldiv@quotient+1,w
  3539  04F5  00F1               	movwf	?___lldiv+1
  3540  04F6  0879               	movf	___lldiv@quotient,w
  3541  04F7  00F0               	movwf	?___lldiv
  3542  04F8                     l297:
  3543  04F8  0008               	return
  3544  04F9                     __end_of___lldiv:
  3545  007E                     btemp	set	126	;btemp
  3546  007E                     wtemp0	set	126
  3547                           
  3548                           	psect	idloc
  3549                           
  3550                           ;Config register IDLOC0 @ 0x2000
  3551                           ;	unspecified, using default values
  3552  2000                     	org	8192
  3553  2000  3FFF               	dw	16383
  3554                           
  3555                           ;Config register IDLOC1 @ 0x2001
  3556                           ;	unspecified, using default values
  3557  2001                     	org	8193
  3558  2001  3FFF               	dw	16383
  3559                           
  3560                           ;Config register IDLOC2 @ 0x2002
  3561                           ;	unspecified, using default values
  3562  2002                     	org	8194
  3563  2002  3FFF               	dw	16383
  3564                           
  3565                           ;Config register IDLOC3 @ 0x2003
  3566                           ;	unspecified, using default values
  3567  2003                     	org	8195
  3568  2003  3FFF               	dw	16383
  3569                           
  3570                           	psect	config
  3571                           
  3572                           ;Config register CONFIG @ 0x2007
  3573                           ;	Oscillator Selection bits
  3574                           ;	FOSC = HS, HS oscillator
  3575                           ;	Watchdog Timer Enable bit
  3576                           ;	WDTE = OFF, WDT disabled
  3577                           ;	Power-up Timer Enable bit
  3578                           ;	PWRTE = OFF, PWRT disabled
  3579                           ;	Brown-out Reset Enable bit
  3580                           ;	BOREN = ON, BOR enabled
  3581                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3582                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3583                           ;	Data EEPROM Memory Code Protection bit
  3584                           ;	CPD = OFF, Data EEPROM code protection off
  3585                           ;	Flash Program Memory Write Enable bits
  3586                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3587                           ;	In-Circuit Debugger Mode bit
  3588                           ;	DEBUG = 0x1, unprogrammed default
  3589                           ;	Flash Program Memory Code Protection bit
  3590                           ;	CP = OFF, Code protection off
  3591  2007                     	org	8199
  3592  2007  3F7A               	dw	16250

Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@b(BANK0[10]), main@a(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    rtc_get_datetime@add	PTR struct . size(1) Largest target is 6
		 -> main@dt(BANK0[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 10
		 -> main@b(BANK0[10]), main@a(BANK0[10]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _rtc_get_datetime->_BCD2Decimal
    _BCD2Decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0    4540
                                             19 BANK0     33    33      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _rtc_get_datetime
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    1905
                                              0 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rtc_get_datetime                                    12    12      0     697
                                              8 COMMON     1     1      0
                                              0 BANK0     11    11      0
                        _BCD2Decimal
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      3     3      0      45
                                              0 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCD2Decimal                                          4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _rtc_get_datetime
     _BCD2Decimal
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      34       5       65.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jan 19 13:07:45 2023

                               pc 0002                    ___bmul@product 0072                                l60 01FE  
                              l54 0249                                l63 020A                                l80 02F3  
                              l72 01D3                                l57 032B                                l66 01DC  
                              l91 02A6                                l83 028E                                l75 01F0  
                              l84 0291                                l85 0297                                l69 01E5  
                              l86 0298                                l94 0263                                l78 02EE  
                              l87 029E                                l79 02F1                                l88 029F  
                              l89 02A5                                l97 0492                                fsr 0004  
             ___wmul@multiplicand 0072                               l100 01FD                               l120 05B2  
                             l106 0434                               l115 0284                               l131 0652  
                             l109 0364                               l261 02B3                               l246 0755  
                             l263 02CB                               l257 07FB                               l533 03E2  
                             l287 0231                               l543 039E                               l297 04F8  
                             l714 021C                               _RD1 0041                               _RD2 0042  
                             _RD3 0043                               _RB7 0037                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             _PEN 048A                               u700 029C                               u701 029B  
                             u710 02A3                               u711 02A2                               u720 0223  
                             u721 0222                               u730 0230                               u731 022F  
                             u660 0204                               u900 03A7                               u820 02C7  
                             _SEN 0488                               u661 0203                               u901 03A6  
                             u821 02C6                               u805 02B4                               u830 04A3  
                             u670 020A                               u750 02EA                               u831 04A2  
                             u671 0209                               u751 02E9                               u815 02BB  
                             u680 028A                               u920 03B9                               u681 0289  
                             u745 023D                               u921 03B8                               u850 04B7  
                             u690 0295                               u770 0213                               u851 04B6  
                             u691 0294                               u915 03AB                               u771 0212  
                             u940 03CA                               u780 0219                               u845 04A8  
                             u765 033D                               u941 03C9                               u781 0218  
                             u870 04D2                               u790 02AD                               u871 04D1  
                             u935 03BA                               u791 02AC                               u960 03DE  
                             u865 04B9                               u961 03DD                               u945 03C6  
                             u890 04F0                               u970 036B                               u891 04EF  
                             u875 04CE                               u955 03D2                               u971 036A  
                             u885 04E2                               u990 037D                               u991 037C  
                             u985 036F                               fsr0 0004                               indf 0000  
                            l1300 0257                              l1302 0260                              l1310 0348  
                            l1230 01FE                              l1240 029C                              l1320 035C  
                            l1312 034B                              l1304 032D                              l1232 0204  
                            l1400 0365                              l1242 02A3                              l1234 0286  
                            l1322 0361                              l1314 0350                              l1306 0337  
                            l1250 0227                              l1410 037D                              l1402 036B  
                            l1330 0219                              l1236 028A                              l1316 0353  
                            l1308 033A                              l1252 0229                              l1244 021E  
                            l1500 05A3                              l1412 0387                              l1404 036E  
                            l1340 02AD                              l1332 021B                              l1324 020C  
                            l1350 0493                              l1430 0329                              l1422 02F4  
                            l1238 0295                              l1318 0359                              l1254 0230  
                            l1246 021F                              l1270 01CB                              l1262 01D4  
                            l1414 038D                              l1406 0375                              l1342 02BA  
                            l1326 020D                              l1510 0690                              l1502 0679  
                            l1360 04C0                              l1352 04A3                              l1432 032A  
                            l1424 02F8                              l1440 0453                              l1248 0223  
                            l1280 02D2                              l1272 01D0                              l1264 01D9  
                            l1416 0394                              l1408 0379                              l1344 02C1  
                            l1336 02A7                              l1328 0213                              l1520 06CF  
                            l1512 0693                              l1504 067E                              l1362 04D2  
                            l1354 04A6                              l1370 04F0                              l1426 02FB  
                            l1442 0459                              l1434 0435                              l1450 03FA  
                            l1258 0233                              l1290 02F2                              l1282 02DA  
                            l1266 01DD                              l1274 01E7                              l1418 039A  
                            l1346 02C7                              l1338 02A9                              l1530 070A  
                            l1522 06D3                              l1514 06A3                              l1506 0684  
                            l1364 04E0                              l1356 04B3                              l1428 02FC  
                            l1444 01F1                              l1436 043B                              l1460 0423  
                            l1452 03FF                              l1284 02E0                              l1268 01E2  
                            l1276 01EC                              l1380 03AA                              l1532 070E  
                            l1516 06A7                              l1508 068B                              l1366 04E1  
                            l1358 04B7                              l1294 024B                              l1438 0444  
                            l1462 0428                              l1454 0405                              l1446 03E4  
                            l1470 0273                              l1286 02E5                              l1278 02CD  
                            l1390 03D0                              l1382 03B1                              l1374 039F  
                            l1550 0743                              l1534 0712                              l1518 06BC  
                            l1526 06E3                              l1630 05C8                              l1622 05B3  
                            l1368 04EA                              l1296 024E                              l1464 042E  
                            l1448 03E9                              l1456 040C                              l1472 0279  
                            l1288 02EA                              l1392 03D1                              l1384 03B5  
                            l1376 03A1                              l1560 0770                              l1552 0749  
                            l1544 071D                              l1536 0716                              l1528 0702  
                            l1640 061A                              l1632 05CD                              l1624 05B7  
                            l1298 0254                              l1458 0412                              l1466 0265  
                            l1490 0558                              l1482 0526                              l1474 04FC  
                            l1394 03D8                              l1386 03B9                              l1378 03A7  
                            l1570 0793                              l1562 0776                              l1554 074F  
                            l1538 071B                              l1650 0646                              l1642 0626  
                            l1634 05D2                              l1626 05B8                              l1468 0268  
                            l1492 0568                              l1484 0535                              l1476 0522  
                            l1388 03CA                              l1396 03DE                              l1580 07D8  
                            l1572 079A                              l1564 077D                              l1556 0760  
                            l1548 0739                              l1660 0666                              l1652 064C  
                            l1644 062C                              l1636 05D8                              l1628 05BB  
                            l1494 0576                              l1486 053B                              l1582 07DC  
                            l1574 079E                              l1566 0781                              l1558 076C  
                            l1662 0667                              l1654 0651                              l1646 0638  
                            l1638 05F9                              l1496 0585                              l1488 0548  
                            l1576 07A3                              l1568 078D                              l1584 07E5  
                            l1656 0656                              l1648 063E                              l1498 0594  
                            l1578 07D1                              l1586 07F7                              l1658 0660  
                            l1684 06F7                              STR_1 0013                              STR_2 0013  
                            u1000 0387                              u1001 0386                              u1020 039A  
                            u1100 0684                              u1021 0399                              u1005 0383  
                            u1101 0683                              u1030 030C                              u1110 06A3  
                            u1015 038E                              u1111 06A2                              u1040 03E9  
                            u1200 078D                              u1120 06E3                              u1041 03E8  
                            u1201 078C                              u1121 06E2                              u1210 0793  
                            u1130 0712                              u1035 0307                              u1211 0792  
                            u1131 0711                              u1060 0412                              u1220 07E5  
                            u1140 0738                              u1061 0411                              u1221 07E4  
                            u1141 0737                              u1230 07F7                              u1150 0743  
                            u1055 03F1                              u1231 07F6                              u1151 0742  
                            u1080 0284                              u1160 0749                              u1081 0283  
                            u1161 0748                              u1145 0734                              u1090 0548  
                            u1170 074F                              u1250 0646                              u1075 041A  
                            u1091 0547                              u1171 074E                              u1307 065C  
                            u1251 0645                              u1180 0760                              u1260 064C  
                            u1181 075F                              u1317 066D                              u1261 064B  
                            u1190 0776                              u1270 0651                              u1327 034D  
                            u1095 0544                              u1191 0775                              u1271 0650  
                            u1280 0656                              u1337 035E                              u1185 075C  
                            u1281 0655                              u1290 0666                              u1347 043F  
                            u1291 0665                              u1357 044E                              u1367 045D  
                            u1377 025B                              _RCEN 048B                              _RSEN 0489  
               ?_Lcd_Write_String 0070  __end_of_I2C_Master_RepeatedStart 01D4                              _main 05B3  
                            btemp 007E                              start 0000                ??_Lcd_Write_String 0075  
                 __end_of_Lcd_Cmd 0264                 ___bmul@multiplier 0073                  ?_I2C_Master_Init 0020  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                 rtc_get_datetime@i 0028  
                ?_I2C_Master_Stop 0070                             ?_main 0070                   __end_of___lldiv 04F9  
                 __end_of___lwdiv 03E3                   __end_of___lwmod 039F                             _TRISB 0086  
                           _TRISD 0088                   __end_of_dpowers 0013                   __end_of_isdigit 021D  
                           main@a 003A                             main@b 0044                    BCD2Decimal@num 0077  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __end_of_sprintf 07FC                  __end_of_Lcd_Init 0493                  __end_of_Lcd_Port 02A7  
                 __initialization 07FC                      __end_of_main 0676                            ??_main 0033  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0070          __end_of_rtc_get_datetime 05B3                         ??_Lcd_Cmd 0071  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 01CB  
                          ___bmul 021D                            ___wmul 02A7                         ??___lldiv 0078  
                       ??___lwdiv 0074                         ??___lwmod 007C                            main@dt 004E  
                       ??_isdigit 0070                         ??_sprintf 0027                   Lcd_Set_Cursor@a 0077  
                 Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0079                   Lcd_Set_Cursor@z 0078  
         __end_of__initialization 07FC                 __end_of_Lcd_Clear 01FE               ___bmul@multiplicand 0070  
                  __pcstackCOMMON 0070                     ??_BCD2Decimal 0074                    _Lcd_Set_Cursor 03E3  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                      sprintf@width 002F  
             rtc_get_datetime@add 002A                        __pmaintext 05B3                           ?___bmul 0070  
                         ?___wmul 0070            __end_of_Lcd_Set_Cursor 0435               __end_of_BCD2Decimal 024A  
                      ??_Lcd_Init 0074                        ??_Lcd_Port 0070                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0003                    _Lcd_Write_Char 032C  
                         _Lcd_Cmd 024A                           ___lldiv 0493                           ___lwdiv 039F  
                         ___lwmod 0365                   ?_Lcd_Set_Cursor 0074                           __ptext1 0676  
                         __ptext2 020B                           __ptext3 02A7                           __ptext4 0365  
                         __ptext5 039F                           __ptext6 04F9                           __ptext7 01E6  
                         __ptext8 01DD                           __ptext9 01D4                           _dpowers 0009  
                         _isdigit 020B                           _sprintf 0676            __end_of_Lcd_Write_Char 0365  
            end_of_initialization 07FC                 ?_rtc_get_datetime 0070        ??_I2C_Master_RepeatedStart 0070  
              ??_rtc_get_datetime 0078                   ___lldiv@divisor 0070                   ___lldiv@counter 007D  
                     _BCD2Decimal 0232                         Lcd_Port@a 0070                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0078                 Lcd_Write_String@i 0076                         _Lcd_Clear 01F1  
            I2C_Master_Init@clock 0020                    __end_of___bmul 0232                    __end_of___wmul 02CC  
                _Lcd_Write_String 0264               start_initialization 07FC                 ??_I2C_Master_Init 0024  
               ??_I2C_Master_Read 0070                 ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070  
                      ?_Lcd_Clear 0070                          ??___bmul 0071                          ??___wmul 0074  
                 Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073                         ___latbits 0002  
                   __pcstackBANK0 0020                          ?_Lcd_Cmd 0070              rtc_get_datetime@buff 0020  
                     sprintf@flag 002C                       sprintf@prec 002B                  _I2C_Master_Start 01D4  
                _I2C_Master_Write 01E6                  ___lwdiv@dividend 0072                  ??_Lcd_Set_Cursor 0075  
                        ?___lldiv 0070                          ?___lwdiv 0070                          ?___lwmod 0078  
            I2C_Master_Write@data 0070                         __pstrings 0003                          ?_isdigit 0070  
                ___lwdiv@quotient 0075                          ?_sprintf 0020                    ___wmul@product 0074  
                        Lcd_Cmd@a 0073                       ??_Lcd_Clear 0074                      ?_BCD2Decimal 0070  
                     __stringbase 0008                 ___wmul@multiplier 0070                  ??_Lcd_Write_Char 0071  
                        _Lcd_Init 0435                          _Lcd_Port 0285               I2C_Master_Read@temp 0072  
        __end_of_Lcd_Write_String 0285         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0009  
                     _isdigit$653 0070                        sprintf@val 002D                   _I2C_Master_Init 02F4  
                 _I2C_Master_Read 02CC                   _I2C_Master_Wait 01FE                   _I2C_Master_Stop 01DD  
                 ___lwdiv@divisor 0070                   ___lwdiv@counter 0077                          __ptext10 01CB  
                        __ptext11 02CC                          __ptext20 024A                          __ptext12 01FE  
                        __ptext21 0285                          __ptext13 0232                          __ptext22 02F4  
                        __ptext14 021D                          __ptext23 0493                          __ptext15 0264  
                        __ptext16 032C                          __ptext17 03E3                          __ptext18 0435  
                        __ptext19 01F1                I2C_Master_Read@ack 0071          __end_of_I2C_Master_Start 01DD  
        __end_of_I2C_Master_Write 01F1                          isdigit@c 0071                Lcd_Write_Char@temp 0072  
                       sprintf@ap 002A                         sprintf@sp 0031                  ___lwmod@dividend 007A  
                ___lldiv@dividend 0074                         stringcode 0003                  _rtc_get_datetime 04F9  
         __end_of_I2C_Master_Init 032C           __end_of_I2C_Master_Read 02F4           __end_of_I2C_Master_Wait 020B  
         __end_of_I2C_Master_Stop 01E6                Lcd_Set_Cursor@temp 007A                          sprintf@c 0032  
                        sprintf@f 0020                  ___lldiv@quotient 0079                   ___lwmod@divisor 0078  
                 ___lwmod@counter 007D                          stringdir 0003                          stringtab 0003  
                     _SSPCON2bits 0091  
